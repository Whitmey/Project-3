{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/food.js","js/models/food.js","js/controllers/main.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","FoodsIndexController","Food","foodsIndex","all","query","FoodsNewController","create","save","foodsNew","food","FoodsShowController","deleteFood","foodsShow","$remove","get","params","delete","isLoggedIn","isAuthenticated","FoodsEditController","update","foodsEdit","$update","$resource","id","method","MainController","$rootScope","logout","secureState","e","toState","main","message","protectedStates","includes","name","preventDefault","$on","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsIndexController as foodsIndex'\n    })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'RegisterController as register'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n  .controller('FoodsIndexController', FoodsIndexController);\n\n\nFoodsIndexController.$inject = ['Food'];\nfunction FoodsIndexController(Food){\n  const foodsIndex = this;\n\n  foodsIndex.all = Food.query();\n}\nFoodsNewController.$inject = ['Food', '$state'];\nfunction FoodsNewController(Food, $state) {\n  const foodsNew = this;\n\n  foodsNew.food = {};\n\n  function create() {\n    Food.save(foodsNew.food, () => {\n      $state.go('foodsIndex');\n    });\n  }\n  foodsNew.create = create;\n}\nFoodsShowController.$inject = ['Food', '$state', '$auth'];\nfunction FoodsShowController(Food, $state, $auth) {\n  const foodsShow = this;\n\n  foodsShow.food = Food.get($state.params);\n\n  function deleteFood() {\n    foodsShow.food.$remove(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  foodsShow.delete = deleteFood;\n  foodsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nFoodsEditController.$inject = ['Food', '$state'];\nfunction FoodsEditController(Food, $state) {\n  const foodsEdit = this;\n\n  foodsEdit.food = Food.get($state.params);\n\n  function update() {\n    foodsEdit.food.$update(() => {\n      $state.go('foodsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n"]}