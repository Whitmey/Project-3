{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/food.js","js/models/food.js","js/controllers/main.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","FoodsController","Food","create","save","foods","foodsNew","reload","foodsDelete","foodId","all","i","length","_id","$remove","editFoods","update","foodsEdit","food","$update","params","get","delete","query","$resource","id","method","MainController","$rootScope","logout","secureState","e","toState","main","message","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","$on","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsController as foods'\n    })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'RegisterController as register'\n    })\n    .state('select', {\n      url: '/select',\n      templateUrl: '/templates/select.html'\n    })\n    .state('dietProfile', {\n      url: '/dietProfile',\n      templateUrl: '/templates/dietProfile.html'\n    })\n    .state('dietFriends', {\n      url: '/dietFriends',\n      templateUrl: '/templates/dietFriends.html'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n// .controller('FoodsIndexController', FoodsIndexController)\n// .controller('FoodsNewController', FoodsNewController)\n// .controller('FoodsShowController', FoodsShowController)\n// .controller('FoodsEditController', FoodsEditController)\n.controller('FoodsController', FoodsController);\n\n\n\nFoodsController.$inject = ['Food', '$state', '$auth'];\nfunction FoodsController(Food, $state) {\n\n  const foods = this;\n  // foods.getIndex = getIndex;\n  // foods.newFood = newFood;\n  // foods.showFoods = showFoods;\n  foods.editFoods = editFoods;\n  foods.create = create;\n  foods.delete = foodsDelete;\n\n\n  foods.all = Food.query();\n\n\n  foods.foodsNew = {};\n\n  function create() {\n    Food.save(foods.foodsNew, () => {\n      $state.reload();\n    });\n  }\n\n  function foodsDelete(foodId) {\n    console.log(foods.all);\n\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.all[i].$remove(() => {\n          $state.reload();\n        });\n    }\n  }\n\n\n  function editFoods(Food, $state) {\n    const foodsEdit = this;\n\n    foodsEdit.food = Food.get($state.params);\n\n    function update() {\n      foodsEdit.food.$update(() => {\n        $state.go('foodsShow', $state.params);\n      });\n    }\n\n    this.update = update;\n\n  }\n\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n"]}