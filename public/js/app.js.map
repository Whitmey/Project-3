{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/dragDrop.js","js/controllers/finance.js","js/models/finance.js","js/controllers/food.js","js/models/food.js","js/controllers/main.js","js/controllers/picture.js","js/models/usda.js","js/controllers/user.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","dragDrop","reader","FileReader","restrict","replace","scope","base64","src","link","$scope","element","active","$watchGroup","image","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","FinancesController","Finance","create","save","finances","financesNew","amountSpent","budget","document","getElementById","innerHTML","reload","financesDelete","financeId","all","i","length","_id","$remove","editFinances","editFinance","update","$update","edit","delete","query","financeMainController","$rootScope","setDatapoints","main","category","toLowerCase","datapoints","parseInt","createChart","secureState","toState","message","isAuthenticated","protectedStates","includes","name","ctx","Chart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","ticks","beginAtZero","isLoggedIn","res","$on","$resource","id","method","FoodsController","Food","User","moment","Usda","search","foods","searchResults","searchTerm","list","item","addFood","ndbno","infoResults","itemInfo","foodsNew","kcal","nutrients","filter","unit","value","thisUser","eaten","push","editFood","date","format","get","getPayload","MainController","$window","getUser","payload","checkDailyGoal","todaysCals","caloryCounter","today","burgerOpen","getDays","days","day","subtract","calories","getCalories","k","chartElement","chart","destroy","dailyChart","chartData","weeklyChart","reverse","monthlyChart","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","setDailyGoal","dailyGoal","goalMessage","undefined","completedGoals","amount","clearGoal","allFood","allMyFoods","canShowCanvas","CountdownController","getTimeRemaining","endtime","t","Date","parse","seconds","Math","floor","minutes","hours","total","initializeClock","updateClock","daysSpan","hoursSpan","slice","minutesSpan","secondsSpan","clearInterval","timeinterval","clock","querySelector","setInterval","deadline","PicturesBeforeController","picturesBefore","PicturesAfterController","picturesAfter","$http","UsersIndexController","follow","usersIndex","currentUser","following","unfollow","indexOf","splice","isFollowing","isSelf","username","angular","module","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer', 'angularMoment'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsController as foods'\n    })\n    .state('leaderboard', {\n      url: '/leaderboard',\n      templateUrl: '/templates/leaderboard.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('landing', {\n      url: '/',\n      templateUrl: '/templates/landing.html'\n    })\n    .state('select', {\n      url: '/select',\n      templateUrl: '/templates/select.html'\n    })\n    .state('dietProfile', {\n      url: '/dietProfile',\n      templateUrl: '/templates/dietProfile.html'\n    })\n    .state('dietFriends', {\n      url: '/dietFriends',\n      templateUrl: '/templates/dietFriends.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('finances', {\n      url: '/finances',\n      templateUrl: '/templates/finances.html',\n      controller: 'FinancesController as finances'\n    })\n    .state('picturesBefore', {\n      url: '/pictures/before',\n      templateUrl: '/templates/picturesBefore.html',\n      controller: 'PicturesBeforeController as picturesBefore'\n    })\n    .state('picturesAfter', {\n      url: '/pictures/after',\n      templateUrl: '/templates/picturesAfter.html',\n      controller: 'PicturesAfterController as picturesAfter'\n    });\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('landing');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    // console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n  .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '=',\n      src: '='\n    },\n\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      $scope.$watchGroup(['base64', 'src'], () => {\n        $scope.image = $scope.base64 || $scope.src;\n        console.log($scope);\n      });\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n\n      };\n\n      element\n        .on('dragenter', () => {\n          $scope.active = true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) => {\n          e.preventDefault();\n        })\n        .on('dragleave', () => {\n          $scope.active = false;\n          $scope.$apply();\n        })\n      .on('drop', (e) => {\n        e.preventDefault();\n        const file = (e.target.files || e.dataTransfer.files)[0];\n\n\n        reader.readAsDataURL(file);\n      });\n    }\n  };\n}\n","angular.module('foodApp')\n  .controller('FinancesController', FinancesController)\n  .controller('financeMainController', financeMainController);\n\nFinancesController.$inject = ['Finance', '$state', '$auth'];\nlet budget = 500;\nfunction FinancesController(Finance, $state) {\n\n  const finances = this;\n  finances.edit = editFinances;\n  finances.create = create;\n  finances.delete = financesDelete;\n  finances.editFinance = {};\n  finances.update = update;\n\n  finances.all = Finance.query();\n\n  finances.financesNew = {};\n\n  function create() {\n    Finance.save(finances.financesNew, () => {\n      const amountSpent = finances.financesNew.amountSpent;\n      budget -= amountSpent;\n      console.log(budget);\n      budget = document.getElementById('budgetText').innerHTML;\n      console.log(budget);\n      $state.reload();\n    });\n  }\n\n  function financesDelete(financeId) {\n    console.log(finances.all);\n\n    for(var i = 0; i< finances.all.length; i++) {\n      if(finances.all[i]._id === financeId)\n        finances.all[i].$remove(() => {\n          $state.reload();\n        });\n    }\n  }\n\n\n  function editFinances(financeId) {\n    for(var i = 0; i< finances.all.length; i++) {\n      if(finances.all[i]._id === financeId)\n        finances.editFinance = finances.all[i];\n    }\n  }\n\n  function update() {\n    finances.editFinance.$update(() => {\n      $state.reload();\n    });\n  }\n}\n\nfinanceMainController.$inject = ['$auth', '$state', '$rootScope', 'Finance'];\nfunction financeMainController($auth, $state, $rootScope, Finance) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  main.setDatapoints = setDatapoints;\n\n  const datapoints = [0, 0, 0, 0, 0];\n\n  Finance.query((res) => {\n    main.all = res;\n    setDatapoints();\n  });\n\n\n  function setDatapoints() {\n    for (var i=0;i<main.all.length;i++) {\n      if (main.all[i].category.toLowerCase() === 'entertainment') {\n        datapoints[0] += parseInt(main.all[i].amountSpent);\n      } else if (main.all[i].category.toLowerCase() === 'food') {\n        datapoints[1] += parseInt(main.all[i].amountSpent);\n      } else if (main.all[i].category.toLowerCase() === 'utilities') {\n        datapoints[2] += parseInt(main.all[i].amountSpent);\n      } else if (main.all[i].category.toLowerCase() === 'rent') {\n        datapoints[3] += parseInt(main.all[i].amountSpent);\n      } else if (main.all[i].category.toLowerCase() === 'other') {\n        datapoints[4] += parseInt(main.all[i].amountSpent);\n      }\n    }\n    console.log(datapoints);\n    createChart();\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  function createChart() {\n    const ctx = document.getElementById('myChart1');\n    const myChart = new Chart(ctx, {\n      type: 'radar',\n      data: {\n        labels: ['Entertainment', 'Food', 'Utilities', 'Rent', 'Other' ],\n        datasets: [{\n          label: 'Money Spent',\n          data: datapoints,\n          backgroundColor: [\n            'rgba(0, 166, 251, 0.3)'\n          ],\n          borderColor: [\n            'rgba(0,166,251,1)'\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    });\n  }\n}\n","angular.module('foodApp')\n  .factory('Finance', Finance);\n\nFinance.$inject = ['$resource'];\nfunction Finance($resource) {\n  return new $resource('/finances/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n  .controller('FoodsController', FoodsController);\n\nFoodsController.$inject = ['Food', 'User', '$auth', '$state', 'moment', 'Usda'];\nfunction FoodsController(Food, User, $auth, $state, moment, Usda) {\n\n  const foods = this;\n\n  foods.searchTerm = '';\n  foods.searchResults = [];\n  foods.ndbno = '';\n  foods.infoResults = [];\n\n  foods.search = search;\n  foods.addFood = addFood;\n  foods.create = create;\n\n  foods.update = update;\n  foods.foodsNew = {};\n  foods.foodsNew.date = moment().format('DD/MM/YYYY');\n\n  const thisUser = User.get({ id: $auth.getPayload()._id });\n\n  Food.query((res) => {\n    foods.all = res;\n    thisUser.$update();\n  });\n\n  function search() {\n    foods.searchResults = [];\n    Usda.search(foods.searchTerm).then(\n      (searchResults) => {\n        if (searchResults.data.list) {\n          foods.searchResults = searchResults.data.list.item;\n        }\n      }\n    );\n  }\n\n  function addFood(ndbno) {\n    foods.infoResults = [];\n    Usda.itemInfo(ndbno).then(\n      (infoResults) => {\n        foods.foodsNew.kcal = infoResults.data.nutrients.filter((item) => {\n          return item.unit === 'kcal';\n        })[0].value;\n        foods.foodsNew.name = infoResults.data.name;\n        create();\n      }\n    );\n  }\n\n  function create() {\n    console.log(foods.foodsNew);\n    Food.save(foods.foodsNew, () => {\n      Food.query((res) => {\n        foods.all = res;\n        thisUser.$update();\n        thisUser.eaten.push(foods.all[foods.all.length-1]);\n        console.log(thisUser);\n      });\n    });\n  }\n\n  function update() {\n    foods.editFood.$update(() => {\n      foods.all = Food.query();\n    });\n  }\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n.controller('MainController', MainController)\n.controller('CountdownController', CountdownController);\n\nMainController.$inject = ['moment', 'Food', 'User', '$auth', '$state', '$rootScope', '$window'];\nfunction MainController(moment, Food, User, $auth, $state, $rootScope, $window) {\n  const main = this;\n  const Chart = $window.Chart;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  main.todaysCals = todaysCals;\n  main.allFood = Food.query();\n  main.caloryCounter = 0;\n  main.allMyFoods = [];\n  main.today = moment().format('DD/MM/YYYY');\n\n  main.thisUser = null;\n\n  function getUser() {\n    const payload = $auth.getPayload();\n    if(payload) {\n      User.get({ id: $auth.getPayload()._id }, (user) => {\n        main.thisUser = user;\n        checkDailyGoal();\n      });\n    }\n  }\n\n  getUser();\n\n  let days = [];\n\n  //this function checks if items in users foods were eaten on this weekday and adds up calories for just those items.\n  function todaysCals() {\n    main.caloryCounter = 0;\n    for(let i=0; i<main.thisUser.eaten.length; i++) {\n      if (main.thisUser.eaten[i].date === main.today){\n        main.caloryCounter += main.thisUser.eaten[i].kcal;\n      }\n    }\n  }\n\n  function secureState(e, toState) {\n    main.message = null;\n    main.burgerOpen = false;\n    if(!$auth.isAuthenticated() && toState.name !== 'landing') {\n      e.preventDefault();\n      $state.go('landing');\n      main.message = 'You need to login to see that!';\n\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  //function to populate a MONTHS worth of objects with dates and calories. they will update each day.\n  function getDays() {\n    days = [];\n    for (let day=1; day<28; day ++) {\n      days.push( {\n        date: moment().subtract(day, 'days').format('DD/MM/YYYY'),\n        calories: 0\n      });\n    }\n    getCalories();\n  }\n\n  function getCalories() {\n    for (let i=0; i<days.length; i++) {\n      for (let k = 0; k< main.thisUser.eaten.length; k++) {\n        if(main.thisUser.eaten[k].date === days[i].date) {\n          days[i].calories += main.thisUser.eaten[k].kcal;\n        }\n      }\n    }\n  }\n  main.createChart = createChart;\n\n\n\n\n\n\n  main.canShowCanvas = true;\n\n  let labels = [];\n  let datapoints = [];\n  let chart = null;\n\n  function createChart(data) {\n    const chartElement = document.getElementById('myChart');\n\n    if (chart && chart.destroy) {\n      chart.destroy();\n    }\n    chart = new Chart(chartElement, {\n      type: 'line',\n      data: data\n    });\n  }\n\n  function dailyChart() {\n    todaysCals();\n    getDays();\n    labels = [' ', 'Today', ' '];\n    datapoints = [main.caloryCounter, main.caloryCounter, main.caloryCounter];\n    chartData(labels, datapoints);\n  }\n\n  function weeklyChart() {\n    todaysCals();\n    getDays();\n    labels = [];\n    datapoints = [];\n    for (let i=0; i<6; i++) {\n      console.log(days[1]);\n      labels.push(days[i].date);\n      datapoints.push(days[i].calories);\n    }\n    labels.reverse();\n    datapoints.reverse();\n    labels.push('Today');\n    datapoints.push(main.caloryCounter);\n\n    chartData(labels, datapoints);\n  }\n\n  function monthlyChart() {\n    todaysCals();\n    getDays();\n    labels = [];\n    datapoints = [];\n    for (let i=0; i<days.length; i++) {\n      labels.push(days[i].date);\n      datapoints.push(days[i].calories);\n    }\n    labels.reverse();\n    datapoints.reverse();\n    labels.push('Today');\n    datapoints.push(main.caloryCounter);\n    chartData(labels, datapoints);\n  }\n\n  function chartData(labels, datapoints) {\n    console.log(datapoints);\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'My First dataset',\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: datapoints,\n          spanGaps: false\n        }\n      ]\n    };\n    createChart(data);\n  }\n\n  main.dailyChart = dailyChart;\n  main.weeklyChart = weeklyChart;\n  main.monthlyChart = monthlyChart;\n  main.dailyGoal = {};\n  main.dailyGoal.date = moment().format('DD/MM/YYYY');\n\n\n\n  function setDailyGoal() {\n    main.thisUser.dailyGoal.push(main.dailyGoal);\n    console.log(main.thisUser.dailyGoal);\n    //disbale form\n    main.thisUser.$update(() => {\n      console.log('goal added to user');\n      main.goalMessage = 'Goal set!';\n    });\n  }\n  main.setDailyGoal = setDailyGoal;\n  main.goalMessage = '';\n\n\n  function checkDailyGoal() {\n    todaysCals();\n    getDays();\n\n    if(main.thisUser.completedGoals === undefined) {\n      main.thisUser.completedGoals = 0;\n    }\n    if (main.thisUser.dailyGoal[0]) {\n      // console.log('there is an item!');\n      if (main.thisUser.dailyGoal[main.thisUser.dailyGoal.length-1].date !== main.today) {\n        switch(main.thisUser.dailyGoal[main.thisUser.dailyGoal.length-1].target) {\n          case 'exceed': if(days.reverse()[days.length-1].calories > main.thisUser.dailyGoal[main.thisUser.dailyGoal.length-1].amount ) {\n            if (main.thisUser.completedGoals[main.thisUser.completedGoals.length-1].date !== main.thisUser.dailyGoal[main.thisUser.dailyGoal.length-1].date ) {\n              main.thisUser.completedGoals.push(main.thisUser.dailyGoal[main.thisUser.dailyGoal.length-1]);\n            }  main.goalMessage = 'You completed your last daily goal!';\n          } else {\n            main.goalMessage = 'You failed to meet yesterdays daily goal!';\n          }\n            break;\n          case 'meet': if(days.reverse()[days.length-1].calories === main.thisUser.dailyGoal[main.thisUser.dailyGoal.length-1].amount) {\n            if (main.thisUser.completedGoals[main.thisUser.completedGoals.length-1].date !== main.thisUser.dailyGoal[main.thisUser.dailyGoal.length-1].date ) {\n              main.thisUser.completedGoals.push(main.thisUser.dailyGoal[main.thisUser.dailyGoal.length-1]);\n            }  main.goalMessage = 'You completed your last daily goal!';\n          } else {\n            main.goalMessage = 'You failed to meet yesterdays daily goal!';\n          }\n            break;\n          case 'under': if(days.reverse()[days.length-1].calories < main.thisUser.dailyGoal[main.thisUser.dailyGoal.length-1].amount) {\n            if (main.thisUser.completedGoals[main.thisUser.completedGoals.length-1].date !== main.thisUser.dailyGoal[main.thisUser.dailyGoal.length-1].date ) {\n              main.thisUser.completedGoals.push(main.thisUser.dailyGoal[main.thisUser.dailyGoal.length-1]);\n            } main.goalMessage = 'You completed your last daily goal!';\n          } else {\n            main.goalMessage = 'You failed to meet yesterdays daily goal!';\n          }\n            break;\n        }\n      }\n    }\n  }\n\n  function clearGoal() {\n\n    console.log(main.thisUser.dailyGoal);\n    $state.reload();\n  }\n  main.clearGoal = clearGoal;\n  main.checkDailyGoal = checkDailyGoal;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCountdownController.$inject = [];\nfunction CountdownController() {\n  function getTimeRemaining(endtime) {\n    var t = Date.parse(endtime) - Date.parse(new Date());\n    var seconds = Math.floor((t / 1000) % 60);\n    var minutes = Math.floor((t / 1000 / 60) % 60);\n    var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n    var days = Math.floor(t / (1000 * 60 * 60 * 24));\n    return {\n      'total': t,\n      'days': days,\n      'hours': hours,\n      'minutes': minutes,\n      'seconds': seconds\n    };\n  }\n\n  function initializeClock(id, endtime) {\n    var clock = document.getElementById(id);\n    var daysSpan = clock.querySelector('.days');\n    var hoursSpan = clock.querySelector('.hours');\n    var minutesSpan = clock.querySelector('.minutes');\n    var secondsSpan = clock.querySelector('.seconds');\n\n    function updateClock() {\n      var t = getTimeRemaining(endtime);\n\n      daysSpan.innerHTML = t.days;\n      hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\n      minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\n      secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\n\n      if (t.total <= 0) {\n        clearInterval(timeinterval);\n      }\n    }\n\n    updateClock();\n    var timeinterval = setInterval(updateClock, 1000);\n  }\n\n  var deadline = new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000);\n  initializeClock('clockdiv', deadline);\n\n\n}\n","angular.module('foodApp')\n  .controller('PicturesBeforeController', PicturesBeforeController)\n  .controller('PicturesAfterController', PicturesAfterController);\n\nPicturesBeforeController.$inject = ['User', '$auth', '$state'];\nfunction PicturesBeforeController(User, $auth, $state) {\n\n  const picturesBefore = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    console.log(user);\n    picturesBefore.user = user;\n  });\n\n  function save() {\n    console.log('picture: ', picturesBefore);\n    // User.update({ id: picturesBefore.user._id }, {before: picturesBefore.base64 }),((err, person ) => {\n    //   if(err) return console.log(err);\n    //   console.log(person);\n    User.update({ id: picturesBefore.user._id, image: 'before' }, picturesBefore.user, () => {\n      $state.go('dietProfile');\n    });\n  }\n\n  picturesBefore.save = save;\n}\n\nPicturesAfterController.$inject = ['User', '$auth', '$state'];\nfunction PicturesAfterController(User, $auth, $state) {\n\n  const picturesAfter = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    picturesAfter.user = user;\n  });\n\n  function save() {\n    User.update({ id: picturesAfter.user._id, image: 'after' }, picturesAfter.user, () => {\n      $state.go('dietProfile');\n    });\n  }\n\n  picturesAfter.save = save;\n}\n","angular.module('foodApp')\n  .factory('Usda', Usda);\n\nUsda.$inject = ['$http'];\nfunction Usda($http) {\n  return {\n    search: (searchTerm) => {\n      return $http({\n        method: 'GET',\n        url: `/usdas?q=${searchTerm}`\n      });\n    },\n    itemInfo: (ndbno) => {\n      return $http({\n        method: 'GET',\n        url: `/usdasi?ndbno=${ndbno}`\n      });\n    }\n  };\n}\n","\nangular.module('foodApp')\n.controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User', '$auth'];\nfunction UsersIndexController(User, $auth ) {\n  const usersIndex = this;\n\n\n  usersIndex.thisUser;\n  // function getThisUser(){\n  //   User.get({ id: $auth.getPayload()._id }, ((user) => {\n  //     console.log('this one here!!!', user);\n  //     return user;\n  //   }));\n  // }\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    usersIndex.currentUser = user;\n    usersIndex.all = User.query();\n  });\n\n  function follow(user) {\n    usersIndex.currentUser.following.push(user);\n    usersIndex.currentUser.$update(() => {\n      console.log('user @\\'d');\n    });\n  }\n\n  function unfollow(user) {\n    const i = usersIndex.currentUser.following.indexOf(user._id);\n    if(i !== -1) {\n      usersIndex.currentUser.following.splice(i, 1);\n      usersIndex.currentUser.$update(() => {\n        console.log('I can\\'t belive you\\'ve done this');\n      });\n    }\n  }\n\n  function isFollowing(user) {\n    return usersIndex.currentUser.following.filter((id) => {\n      return id === user._id;\n    }).length;\n  }\n\n  function isSelf(user) {\n    return user._id === usersIndex.currentUser._id;\n  }\n\n  usersIndex.isSelf = isSelf;\n  usersIndex.isFollowing = isFollowing;\n\n  usersIndex.follow = follow;\n  usersIndex.unfollow = unfollow;\n  usersIndex.filter = { username: '' };\n\n}\n","angular.module('foodApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}