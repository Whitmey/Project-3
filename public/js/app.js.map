{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/dragDrop.js","js/controllers/finance.js","js/models/finance.js","js/controllers/financeMain.js","js/controllers/food.js","js/models/food.js","js/controllers/main.js","js/controllers/picture.js","js/controllers/user.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","dragDrop","reader","FileReader","restrict","replace","scope","base64","src","link","$scope","element","active","$watchGroup","image","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","FinancesController","Finance","create","save","finances","financesNew","amountSpent","budget","document","getElementById","innerHTML","reload","financesDelete","financeId","all","i","length","_id","$remove","editFinances","editFinance","update","$update","edit","delete","query","$resource","id","method","financeMainController","$rootScope","logout","secureState","toState","main","message","isAuthenticated","protectedStates","includes","name","createChart","ctx","Chart","type","data","labels","datasets","backgroundColor","borderColor","borderWidth","options","scales","ticks","beginAtZero","isLoggedIn","$on","FoodsController","Food","User","foods","foodsNew","res","thisUser","eaten","push","foodsDelete","foodId","j","indexOf","splice","editFoods","editFood","get","getPayload","MainController","CountdownController","getTimeRemaining","endtime","t","Date","parse","seconds","Math","floor","minutes","hours","days","total","initializeClock","updateClock","daysSpan","hoursSpan","slice","minutesSpan","secondsSpan","clearInterval","timeinterval","clock","querySelector","setInterval","deadline","PicturesBeforeController","picturesBefore","PicturesAfterController","picturesAfter","UsersIndexController","follow","usersIndex","currentUser","following","unfollow","isFollowing","filter","isSelf","chartElement","chart","destroy","dailyChart","datapoints","chartData","weeklyChart","monthlyChart","label","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","setGoals","dietGoals","goal","dietGoalDates","targetDate","username","canShowCanvas","angular","module","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer', 'angularMoment'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsController as foods'\n    })\n    .state('leaderboard', {\n      url: '/leaderboard',\n      templateUrl: '/templates/leaderboard.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'RegisterController as register'\n    })\n    .state('select', {\n      url: '/select',\n      templateUrl: '/templates/select.html'\n    })\n    .state('dietProfile', {\n      url: '/dietProfile',\n      templateUrl: '/templates/dietProfile.html'\n    })\n    .state('dietFriends', {\n      url: '/dietFriends',\n      templateUrl: '/templates/dietFriends.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('finances', {\n      url: '/finances',\n      templateUrl: '/templates/finances.html',\n      controller: 'FinancesController as finances'\n    })\n    .state('picturesBefore', {\n      url: '/pictures/before',\n      templateUrl: '/templates/picturesBefore.html',\n      controller: 'PicturesBeforeController as picturesBefore'\n    })\n    .state('picturesAfter', {\n      url: '/pictures/after',\n      templateUrl: '/templates/picturesAfter.html',\n      controller: 'PicturesAfterController as picturesAfter'\n    });\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n  .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '=',\n      src: '='\n    },\n\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      $scope.$watchGroup(['base64', 'src'], () => {\n        $scope.image = $scope.base64 || $scope.src;\n        console.log($scope);\n      });\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n\n      };\n\n      element\n        .on('dragenter', () => {\n          $scope.active = true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) => {\n          e.preventDefault();\n        })\n        .on('dragleave', () => {\n          $scope.active = false;\n          $scope.$apply();\n        })\n      .on('drop', (e) => {\n        e.preventDefault();\n        const file = (e.target.files || e.dataTransfer.files)[0];\n\n\n        reader.readAsDataURL(file);\n      });\n    }\n  };\n}\n","angular.module('foodApp')\n// .controller('FinancesIndexController', FinancesIndexController)\n// .controller('FinancesNewController', FinancesNewController)\n// .controller('FinancesShowController', FinancesShowController)\n// .controller('FinancesEditController', FinancesEditController)\n.controller('FinancesController', FinancesController);\n\n\n\nFinancesController.$inject = ['Finance', '$state', '$auth'];\nlet budget = 500;\nfunction FinancesController(Finance, $state) {\n\n\n\n  const finances = this;\n  // finance.getIndex = getIndex;\n  // finance.newFinance = newFinance;\n  // finance.showFinances = showFinances;\n  finances.edit = editFinances;\n  finances.create = create;\n  finances.delete = financesDelete;\n  finances.editFinance = {};\n  finances.update = update;\n\n  finances.all = Finance.query();\n\n\n  finances.financesNew = {};\n\n\n  function create() {\n    Finance.save(finances.financesNew, () => {\n      const amountSpent = finances.financesNew.amountSpent;\n      budget -= amountSpent;\n      console.log(budget);\n      budget = document.getElementById('budgetText').innerHTML;\n      console.log(budget);\n      $state.reload();\n    });\n  }\n\n  function financesDelete(financeId) {\n    console.log(finances.all);\n\n    for(var i = 0; i< finances.all.length; i++) {\n      if(finances.all[i]._id === financeId)\n        finances.all[i].$remove(() => {\n          $state.reload();\n        });\n    }\n  }\n\n\n  function editFinances(financeId) {\n    for(var i = 0; i< finances.all.length; i++) {\n      if(finances.all[i]._id === financeId)\n        finances.editFinance = finances.all[i];\n    }\n  }\n\n  function update() {\n    finances.editFinance.$update(() => {\n      $state.reload();\n    });\n  }\n}\n","angular.module('foodApp')\n  .factory('Finance', Finance);\n\nFinance.$inject = ['$resource'];\nfunction Finance($resource) {\n  return new $resource('/finances/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n  .controller('financeMainController', financeMainController);\n\n\nfinanceMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction financeMainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('financesIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  function createChart() {\n\n    const ctx = document.getElementById('myChart1');\n    const myChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: ['Entertanment', 'Food', 'Utilities', 'Rent', 'Car' ],\n        datasets: [{\n          data: [12, 30, 200, 20, 40],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)'\n          ],\n          borderColor: [\n            'rgba(255,99,132,1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)'\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    });\n  }\n  main.createChart= createChart;\n  main.createChart();\n\n}\n","angular.module('foodApp')\n// .controller('FoodsIndexController', FoodsIndexController)\n// .controller('FoodsNewController', FoodsNewController)\n// .controller('FoodsShowController', FoodsShowController)\n// .controller('FoodsEditController', FoodsEditController)\n.controller('FoodsController', FoodsController);\n\n\n\nFoodsController.$inject = ['Food', 'User', '$auth', '$state'];\nfunction FoodsController(Food, User, $auth, $state) {\n\n  const foods = this;\n  foods.edit = editFoods;\n  foods.create = create;\n  foods.delete = foodsDelete;\n  foods.editFood = {};\n  foods.update = update;\n  foods.foodsNew = {};\n\n  const thisUser = User.get({ id: $auth.getPayload()._id });\n\n  foods.all = Food.query();\n\n\n  function create() {\n    Food.save(foods.foodsNew, () => {\n      $state.reload();\n      console.log(foods);\n    });\n    Food.query((res) => {\n      foods.all = res;\n      thisUser.eaten.push(foods.all[foods.all.length-1]);\n      thisUser.$update();\n      console.log(thisUser);\n    });\n  }\n\n  function foodsDelete(foodId) {\n    // console.log(foods.all);\n\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.all[i].$remove(() => {\n          foods.all = Food.query();\n        });\n      const j = thisUser.eaten.indexOf(foodId);\n      if (j !== -1) {\n        thisUser.eaten.splice(j, 1);\n      }\n    }\n    thisUser.$update();\n    console.log(thisUser);\n  }\n\n\n\n\n  function editFoods(foodId) {\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.editFood = foods.all[i];\n    }\n  }\n\n  function update() {\n    foods.editFood.$update(() => {\n      foods.all = Food.query();\n    });\n  }\n\n\n\n\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n  .controller('MainController', MainController)\n  .controller('CountdownController', CountdownController);\n\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  // main.createChart();\n}\n\n// COMMENTED OUT PIE CHART DATA FOR REFFERENCE\n// data = {\n//   labels: ['Fibre', 'Protein', 'Carbohydrate', 'Fats', 'Water'],\n//   datasets: [{\n//     label: 'Foods',\n//     data: [12, 30, 200, 20, 40],\n//     backgroundColor: [\n//       'rgba(255, 99, 132, 0.4)',\n//       'rgba(54, 162, 235, 0.4)',\n//       'rgba(255, 206, 86, 0.4)',\n//       'rgba(75, 192, 192, 0.4)',\n//       'rgba(153, 102, 255, 0.4)',\n//       'rgba(255, 159, 64, 0.4)'\n//     ],\n//     borderColor: [\n//       'rgba(255,99,132,1)',\n//       'rgba(54, 162, 235, 1)',\n//       'rgba(255, 206, 86, 1)',\n//       'rgba(75, 192, 192, 1)',\n//       'rgba(153, 102, 255, 1)',\n//       'rgba(255, 159, 64, 1)'\n//     ],\n//     borderWidth: 1\n//   }]\n// };\n\nCountdownController.$inject = [];\nfunction CountdownController() {\n  function getTimeRemaining(endtime) {\n    var t = Date.parse(endtime) - Date.parse(new Date());\n    var seconds = Math.floor((t / 1000) % 60);\n    var minutes = Math.floor((t / 1000 / 60) % 60);\n    var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n    var days = Math.floor(t / (1000 * 60 * 60 * 24));\n    return {\n      'total': t,\n      'days': days,\n      'hours': hours,\n      'minutes': minutes,\n      'seconds': seconds\n    };\n  }\n\n  function initializeClock(id, endtime) {\n    var clock = document.getElementById(id);\n    var daysSpan = clock.querySelector('.days');\n    var hoursSpan = clock.querySelector('.hours');\n    var minutesSpan = clock.querySelector('.minutes');\n    var secondsSpan = clock.querySelector('.seconds');\n\n    function updateClock() {\n      var t = getTimeRemaining(endtime);\n\n      daysSpan.innerHTML = t.days;\n      hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\n      minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\n      secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\n\n      if (t.total <= 0) {\n        clearInterval(timeinterval);\n      }\n    }\n\n    updateClock();\n    var timeinterval = setInterval(updateClock, 1000);\n  }\n\n  var deadline = new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000);\n  initializeClock('clockdiv', deadline);\n\n}\n","angular.module('foodApp')\n  .controller('PicturesBeforeController', PicturesBeforeController)\n  .controller('PicturesAfterController', PicturesAfterController);\n\nPicturesBeforeController.$inject = ['User', '$auth', '$state'];\nfunction PicturesBeforeController(User, $auth, $state) {\n\n  const picturesBefore = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    picturesBefore.user = user;\n  });\n\n  function save() {\n    User.update({ id: picturesBefore.user._id, image: 'before' }, picturesBefore.user, () => {\n      $state.go('dietProfile');\n    });\n  }\n\n  picturesBefore.save = save;\n}\n\nPicturesAfterController.$inject = ['User', '$auth', '$state'];\nfunction PicturesAfterController(User, $auth, $state) {\n\n  const picturesAfter = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    picturesAfter.user = user;\n  });\n\n  function save() {\n    User.update({ id: picturesAfter.user._id, image: 'after' }, picturesAfter.user, () => {\n      $state.go('dietProfile');\n    });\n  }\n\n  picturesAfter.save = save;\n}\n","/* global Chart */\n\nangular.module('foodApp')\n.controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User', '$auth'];\nfunction UsersIndexController(User, $auth) {\n  const usersIndex = this;\n\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    usersIndex.currentUser = user;\n    usersIndex.all = User.query();\n  });\n\n  function follow(user) {\n    usersIndex.currentUser.following.push(user);\n    usersIndex.currentUser.$update(() => {\n      console.log('user @\\'d');\n    });\n  }\n\n  function unfollow(user) {\n    const i = usersIndex.currentUser.following.indexOf(user._id);\n    if(i !== -1) {\n      usersIndex.currentUser.following.splice(i, 1);\n      usersIndex.currentUser.$update(() => {\n        console.log('I can\\'t belive you\\'ve done this');\n      });\n    }\n  }\n\n  function isFollowing(user) {\n    return usersIndex.currentUser.following.filter((id) => {\n      return id === user._id;\n    }).length;\n  }\n\n  function isSelf(user) {\n    return user._id === usersIndex.currentUser._id;\n  }\n\n  usersIndex.isSelf = isSelf;\n  usersIndex.isFollowing = isFollowing;\n\n  usersIndex.follow = follow;\n  usersIndex.unfollow = unfollow;\n  usersIndex.filter = { username: '' };\n  usersIndex.canShowCanvas = true;\n\n  let labels = [];\n  let datapoints = [];\n  let chart;\n\n  function createChart(data) {\n    const chartElement = document.getElementById('myChart');\n\n    if (chart && chart.destroy) {\n      chart.destroy();\n    }\n    chart = new Chart(chartElement, {\n      type: 'line',\n      data: data\n    });\n  }\n\n  function dailyChart() {\n    labels = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    datapoints = [65, 59, 80, 81, 56, 55, 40];\n    chartData(labels, datapoints);\n  }\n\n  function weeklyChart() {\n    labels = ['1', '2', '3', '4', '5', '6', '7'];\n    datapoints = [312, 265, 470, 285, 523, 547, 342];\n    chartData(labels, datapoints);\n  }\n\n  function monthlyChart() {\n    labels = ['January','February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    datapoints = [1865, 1759, 2180, 2281, 1856, 1755, 1940, 2180, 2281, 1856, 1755, 1940];\n    chartData(labels, datapoints);\n  }\n\n  function chartData(labels, datapoints) {\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'My First dataset',\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: datapoints,\n          spanGaps: false\n        }\n      ]\n    };\n    createChart(data);\n  }\n\n  usersIndex.dailyChart = dailyChart;\n  usersIndex.weeklyChart = weeklyChart;\n  usersIndex.monthlyChart = monthlyChart;\n\n  function setGoals(user) {\n    user.dietGoals = user.goal;\n    user.dietGoalDates = user.targetDate;\n    usersIndex.currentUser.$update(() => {\n      console.log('Don\\'t let your dreams be dreams');\n    });\n  }\n\n  usersIndex.setGoals = setGoals;\n}\n","angular.module('foodApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}