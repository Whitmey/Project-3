{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/finance.js","js/controllers/finance.js","js/controllers/financeMain.js","js/models/food.js","js/controllers/food.js","js/models/goal.js","js/controllers/goal.js","js/controllers/main.js","js/models/user.js","js/controllers/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","Finance","$resource","id","update","method","FinancesController","create","_this","save","finances","financesNew","amountSpent","budget","reload","financesDelete","financeId","all","i","length","_id","$remove","editFinances","editFinance","$update","edit","delete","query","financeMainController","$rootScope","logout","secureState","e","toState","main","message","isAuthenticated","protectedStates","includes","name","preventDefault","createChart","ctx","document","getElementById","Chart","type","data","labels","datasets","backgroundColor","borderColor","borderWidth","options","scales","ticks","beginAtZero","isLoggedIn","$on","Food","FoodsController","foods","foodsNew","foodsDelete","foodId","editFoods","editFood","Goal","GoalsController","goals","goalsNew","goalsDelete","goalId","editGoals","editGoal","MainController","label","User","UsersIndexController","follow","usersIndex","currentUser","following","push","unfollow","indexOf","splice","isFollowing","filter","isSelf","get","getPayload","username","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsController as foods'\n    })\n    .state('leaderboard', {\n      url: '/leaderboard',\n      templateUrl: '/templates/leaderboard.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'RegisterController as register'\n    })\n    .state('select', {\n      url: '/select',\n      templateUrl: '/templates/select.html'\n    })\n    .state('dietProfile', {\n      url: '/dietProfile',\n      templateUrl: '/templates/dietProfile.html'\n    })\n    .state('dietFriends', {\n      url: '/dietFriends',\n      templateUrl: '/templates/dietFriends.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('finances', {\n      url: '/finances',\n      templateUrl: '/templates/finances.html',\n      controller: 'FinancesController as finances'\n    });\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n  .factory('Finance', Finance);\n\nFinance.$inject = ['$resource'];\nfunction Finance($resource) {\n  return new $resource('/finances/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n// .controller('FinancesIndexController', FinancesIndexController)\n// .controller('FinancesNewController', FinancesNewController)\n// .controller('FinancesShowController', FinancesShowController)\n// .controller('FinancesEditController', FinancesEditController)\n.controller('FinancesController', FinancesController);\n\n\n\nFinancesController.$inject = ['Finance', '$state', '$auth'];\nfunction FinancesController(Finance, $state) {\n\n  this.budget = 500;\n\n\n\n  const finances = this;\n  // finance.getIndex = getIndex;\n  // finance.newFinance = newFinance;\n  // finance.showFinances = showFinances;\n  finances.edit = editFinances;\n  finances.create = create;\n  finances.delete = financesDelete;\n  finances.editFinance = {};\n  finances.update = update;\n\n  finances.all = Finance.query();\n\n\n  finances.financesNew = {};\n\n\n  function create() {\n    Finance.save(finances.financesNew, () => {\n      const amountSpent = finances.financesNew.amountSpent;\n      this.budget -= amountSpent;\n      console.log(this.budget);\n      $state.reload();\n    });\n  }\n\n  function financesDelete(financeId) {\n    console.log(finances.all);\n\n    for(var i = 0; i< finances.all.length; i++) {\n      if(finances.all[i]._id === financeId)\n        finances.all[i].$remove(() => {\n          $state.reload();\n        });\n    }\n  }\n\n\n  function editFinances(financeId) {\n    for(var i = 0; i< finances.all.length; i++) {\n      if(finances.all[i]._id === financeId)\n        finances.editFinance = finances.all[i];\n    }\n  }\n\n  function update() {\n    finances.editFinance.$update(() => {\n      $state.reload();\n    });\n  }\n}\n","angular.module('foodApp')\n  .controller('financeMainController', financeMainController);\n\n\nfinanceMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction financeMainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('financesIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  function createChart() {\n\n    const ctx = document.getElementById('myChart1');\n    const myChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: ['Entertanment', 'Food', 'Utilities', 'Rent', 'Car' ],\n        datasets: [{\n          data: [12, 30, 200, 20, 40],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)'\n          ],\n          borderColor: [\n            'rgba(255,99,132,1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)'\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    });\n  }\n  main.createChart= createChart;\n  main.createChart();\n\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n// .controller('FoodsIndexController', FoodsIndexController)\n// .controller('FoodsNewController', FoodsNewController)\n// .controller('FoodsShowController', FoodsShowController)\n// .controller('FoodsEditController', FoodsEditController)\n.controller('FoodsController', FoodsController);\n\n\n\nFoodsController.$inject = ['Food', '$state', '$auth'];\nfunction FoodsController(Food, $state) {\n\n  const foods = this;\n  // foods.getIndex = getIndex;\n  // foods.newFood = newFood;\n  // foods.showFoods = showFoods;\n  foods.edit = editFoods;\n  foods.create = create;\n  foods.delete = foodsDelete;\n  foods.editFood = {};\n  foods.update = update;\n\n  foods.all = Food.query();\n\n\n  foods.foodsNew = {};\n\n\n  function create() {\n    Food.save(foods.foodsNew, () => {\n      $state.reload();\n    });\n  }\n\n  function foodsDelete(foodId) {\n    console.log(foods.all);\n\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.all[i].$remove(() => {\n          $state.reload();\n        });\n    }\n  }\n\n\n  function editFoods(foodId) {\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.editFood = foods.all[i];\n    }\n  }\n\n  function update() {\n    foods.editFood.$update(() => {\n      $state.reload();\n    });\n  }\n}\n","angular.module('foodApp')\n  .factory('Goal', Goal);\n\nGoal.$inject = ['$resource'];\nfunction Goal($resource) {\n  return new $resource('/goals/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n// .controller('GoalsIndexController', GoalsIndexController)\n// .controller('GoalsNewController', GoalsNewController)\n// .controller('GoalsShowController', GoalsShowController)\n// .controller('GoalsEditController', GoalsEditController)\n.controller('GoalsController', GoalsController);\n\n\n\nGoalsController.$inject = ['Goal', '$state', '$auth'];\nfunction GoalsController(Goal, $state) {\n\n  const goals = this;\n  // goals.getIndex = getIndex;\n  // goals.newGoal = newGoal;\n  // goals.showGoals = showGoals;\n  goals.edit = editGoals;\n  goals.create = create;\n  goals.delete = goalsDelete;\n  goals.editGoal = {};\n  goals.update = update;\n\n  goals.all = Goal.query();\n\n\n  goals.goalsNew = {};\n\n\n  function create() {\n    Goal.save(goals.goalsNew, () => {\n      $state.reload();\n    });\n  }\n\n  function goalsDelete(goalId) {\n    console.log(goals.all);\n\n    for(var i = 0; i< goals.all.length; i++) {\n      if(goals.all[i]._id === goalId)\n        goals.all[i].$remove(() => {\n          $state.reload();\n        });\n    }\n  }\n\n\n  function editGoals(goalId) {\n    for(var i = 0; i< goals.all.length; i++) {\n      if(goals.all[i]._id === goalId)\n        goals.editGoal = goals.all[i];\n    }\n  }\n\n  function update() {\n    goals.editGoal.$update(() => {\n      $state.reload();\n    });\n  }\n}\n","angular.module('foodApp')\n  .controller('MainController', MainController);\n\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  function createChart() {\n\n    const ctx = document.getElementById('myChart');\n    const myChart = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: ['Fibre', 'Protein', 'Carbohydrate', 'Fats', 'Water'],\n        datasets: [{\n          label: 'Foods',\n          data: [12, 30, 200, 20, 40],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)'\n          ],\n          borderColor: [\n            'rgba(255,99,132,1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)'\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    });\n  }\n  main.createChart= createChart;\n  main.createChart();\n}\n","angular.module('foodApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n.controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User', '$auth'];\nfunction UsersIndexController(User, $auth) {\n  const usersIndex = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    usersIndex.currentUser = user;\n    usersIndex.all = User.query();\n  });\n\n  function follow(user) {\n    usersIndex.currentUser.following.push(user);\n    usersIndex.currentUser.$update(() => {\n      console.log('user @\\'d');\n    });\n  }\n\n  function unfollow(user) {\n    const i = usersIndex.currentUser.following.indexOf(user._id);\n    if(i !== -1) {\n      usersIndex.currentUser.following.splice(i, 1);\n      usersIndex.currentUser.$update(() => {\n        console.log('I can\\'t belive you\\'ve done this');\n      });\n    }\n  }\n\n  function isFollowing(user) {\n    return usersIndex.currentUser.following.filter((id) => {\n      return id === user._id;\n    }).length;\n  }\n\n  function isSelf(user) {\n    return user._id === usersIndex.currentUser._id;\n  }\n\n  usersIndex.isSelf = isSelf;\n  usersIndex.isFollowing = isFollowing;\n\n  usersIndex.follow = follow;\n  usersIndex.unfollow = unfollow;\n  usersIndex.filter = { username: '' };\n}\n"]}