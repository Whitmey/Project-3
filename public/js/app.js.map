{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/food.js","js/models/food.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","provider","console","log","FoodsIndexController","Food","foodsIndex","all","query","FoodsNewController","create","save","foodsNew","food","FoodsShowController","deleteFood","foodsShow","$remove","get","params","delete","isLoggedIn","isAuthenticated","FoodsEditController","update","foodsEdit","$update","$resource","id","method","angular","module","config","$inject","factory"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,YACLC,IAAK,aACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,aACLC,IAAK,aACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,aACLC,IAAK,kBACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAMhBJ,EAAmBK,UAAU,UAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GAE5BH,EAAcI,UACZC,SAAU,qBChDd,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACrBC,KAAK,WACJL,EAAOM,GAAG,WAPd,GAAMH,GAAWI,IAEjBJ,GAASC,QAQTD,EAASF,OAASA,EAIpB,QAASO,iBAAgBT,EAAOC,GAM9B,QAASC,KACPF,EAAMU,MAAMA,EAAMC,aACjBL,KAAK,WACJL,EAAOM,GAAG,gBAId,QAASK,GAAaC,GACpBb,EAAMY,aAAaC,GAClBP,KAAK,WAEJL,EAAOM,GAAG,gBAhBdO,QAAQC,IAAI,YACZ,IAAML,GAAQF,IAEdE,GAAMC,eAgBND,EAAMR,OAASA,EACfQ,EAAME,aAAeA,ECpCvB,QAASI,sBAAqBC,GAC5B,GAAMC,GAAaV,IAEnBU,GAAWC,IAAMF,EAAKG,QAGxB,QAASC,oBAAmBJ,EAAMhB,GAKhC,QAASqB,KACPL,EAAKM,KAAKC,EAASC,KAAM,WACvBxB,EAAOM,GAAG,gBANd,GAAMiB,GAAWhB,IAEjBgB,GAASC,QAOTD,EAASF,OAASA,EAGpB,QAASI,qBAAoBT,EAAMhB,EAAQD,GAKzC,QAAS2B,KACPC,EAAUH,KAAKI,QAAQ,WACrB5B,EAAOM,GAAG,gBANd,GAAMqB,GAAYpB,IAElBoB,GAAUH,KAAOR,EAAKa,IAAI7B,EAAO8B,QAQjCH,EAAUI,OAASL,EACnBC,EAAUK,WAAajC,EAAMkC,gBAI/B,QAASC,qBAAoBlB,EAAMhB,GAKjC,QAASmC,KACPC,EAAUZ,KAAKa,QAAQ,WACrBrC,EAAOM,GAAG,YAAaN,EAAO8B,UANlC,GAAMM,GAAY7B,IAElB6B,GAAUZ,KAAOR,EAAKa,IAAI7B,EAAO8B,QAQjCvB,KAAK4B,OAASA,EC/ChB,QAASnB,MAAKsB,GACZ,MAAO,IAAIA,GAAU,cAAgBC,GAAI,SACvCJ,QAAUK,OAAQ,SHNtBC,QACGC,OAAO,WAAY,aAAc,YAAa,eAC9CC,OAAO5D,QACP4D,OAAOpD,MAEVR,OAAO6D,SAAW,iBAAkB,sBAwCpCrD,KAAKqD,SAAW,iBC7ChBH,QAAQC,OAAO,WACZrD,WAAW,qBAAsBS,oBACjCT,WAAW,kBAAmBmB,iBAEjCV,mBAAmB8C,SAAW,QAAS,UAevCpC,gBAAgBoC,SAAW,QAAS,UCnBpCH,QAAQC,OAAO,WACZrD,WAAW,uBAAwB0B,sBAGtCA,qBAAqB6B,SAAW,QAMhCxB,mBAAmBwB,SAAW,OAAQ,UAatCnB,oBAAoBmB,SAAW,OAAQ,SAAU,SAgBjDV,oBAAoBU,SAAW,OAAQ,UCvCvCH,QAAQC,OAAO,WACZG,QAAQ,OAAQ7B,MAEnBA,KAAK4B,SAAW","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsIndexController as foodsIndex'\n    })\n    .state('foodsNew', {\n      url: '/foods/new',\n      templateUrl: '/templates/foodsNew.html',\n      controller: 'FoodsNewController as foodsNew'\n    })\n    .state('foodsShow', {\n      url: '/foods/:id',\n      templateUrl: '/templates/foodsShow.html',\n      controller: 'FoodsShowController as foodsShow'\n    })\n    .state('foodsEdit', {\n      url: '/foods/:id/edit',\n      templateUrl: '/templates/foodsEdit.html',\n      controller: 'FoodsEditController as foodsEdit'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    });\n\n\n\n\n  $urlRouterProvider.otherwise('/foods');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('login');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  console.log('submitted');\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('foodsIndex');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n  .controller('FoodsIndexController', FoodsIndexController);\n\n\nFoodsIndexController.$inject = ['Food'];\nfunction FoodsIndexController(Food){\n  const foodsIndex = this;\n\n  foodsIndex.all = Food.query();\n}\nFoodsNewController.$inject = ['Food', '$state'];\nfunction FoodsNewController(Food, $state) {\n  const foodsNew = this;\n\n  foodsNew.food = {};\n\n  function create() {\n    Food.save(foodsNew.food, () => {\n      $state.go('foodsIndex');\n    });\n  }\n  foodsNew.create = create;\n}\nFoodsShowController.$inject = ['Food', '$state', '$auth'];\nfunction FoodsShowController(Food, $state, $auth) {\n  const foodsShow = this;\n\n  foodsShow.food = Food.get($state.params);\n\n  function deleteFood() {\n    foodsShow.food.$remove(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  foodsShow.delete = deleteFood;\n  foodsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nFoodsEditController.$inject = ['Food', '$state'];\nfunction FoodsEditController(Food, $state) {\n  const foodsEdit = this;\n\n  foodsEdit.food = Food.get($state.params);\n\n  function update() {\n    foodsEdit.food.$update(() => {\n      $state.go('foodsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}