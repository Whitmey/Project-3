{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/food.js","js/models/food.js","js/controllers/goal.js","js/models/goal.js","js/controllers/main.js","js/controllers/user.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","FoodsController","Food","create","save","foods","foodsNew","all","query","document","getElementById","reset","foodsDelete","foodId","i","length","_id","$remove","editFoods","editFood","update","$update","edit","delete","$resource","id","method","GoalsController","Goal","goals","goalsNew","goalsDelete","goalId","editGoals","editGoal","MainController","$rootScope","moment","logout","secureState","e","toState","main","message","isAuthenticated","protectedStates","includes","name","preventDefault","createChart","ctx","Chart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","ticks","beginAtZero","isLoggedIn","$on","UsersIndexController","User","follow","usersIndex","currentUser","following","push","unfollow","indexOf","splice","isFollowing","filter","isSelf","get","getPayload","username","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer', 'angularMoment'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsController as foods'\n    })\n    // .state('goalsIndex', {\n    //   url: '/goals',\n    //   templateUrl: '/templates/goalsIndex.html',\n    //   controller: 'GoalsController as goals'\n    // })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'RegisterController as register'\n    })\n    .state('select', {\n      url: '/select',\n      templateUrl: '/templates/select.html'\n    })\n    .state('dietProfile', {\n      url: '/dietProfile',\n      templateUrl: '/templates/dietProfile.html'\n    })\n    .state('dietFriends', {\n      url: '/dietFriends',\n      templateUrl: '/templates/dietFriends.html',\n      controller: 'UsersIndexController as usersIndex'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n// .controller('FoodsIndexController', FoodsIndexController)\n// .controller('FoodsNewController', FoodsNewController)\n// .controller('FoodsShowController', FoodsShowController)\n// .controller('FoodsEditController', FoodsEditController)\n.controller('FoodsController', FoodsController);\n\n\n\nFoodsController.$inject = ['Food'];\nfunction FoodsController(Food) {\n\n  const foods = this;\n  // foods.getIndex = getIndex;\n  // foods.newFood = newFood;\n  // foods.showFoods = showFoods;\n  foods.edit = editFoods;\n  foods.create = create;\n  foods.delete = foodsDelete;\n  foods.editFood = {};\n  foods.update = update;\n\n  foods.all = Food.query();\n\n\n  foods.foodsNew = {};\n\n\n  function create() {\n    Food.save(foods.foodsNew, () => {\n      foods.all = Food.query();\n    });\n    document.getElementById('createFood').reset();\n  }\n\n  function foodsDelete(foodId) {\n    console.log(foods.all);\n\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.all[i].$remove(() => {\n          foods.all = Food.query();\n        });\n    }\n  }\n\n\n  function editFoods(foodId) {\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.editFood = foods.all[i];\n    }\n  }\n\n  function update() {\n    foods.editFood.$update(() => {\n      foods.all = Food.query();\n    });\n  }\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n// .controller('GoalsIndexController', GoalsIndexController)\n// .controller('GoalsNewController', GoalsNewController)\n// .controller('GoalsShowController', GoalsShowController)\n// .controller('GoalsEditController', GoalsEditController)\n.controller('GoalsController', GoalsController);\n\n\nGoalsController.$inject = ['Goal'];\nfunction GoalsController(Goal) {\n\n  const goals = this;\n  // goals.getIndex = getIndex;\n  // goals.newGoal = newGoal;\n  // goals.showGoals = showGoals;\n  goals.edit = editGoals;\n  goals.create = create;\n  goals.delete = goalsDelete;\n  goals.editGoal = {};\n  goals.update = update;\n\n  goals.all = Goal.query();\n\n\n  goals.goalsNew = {};\n\n\n  function create() {\n    Goal.save(goals.goalsNew, () => {\n      goals.all = Goal.query();\n    });\n    document.getElementById('createGoal').reset();\n  }\n\n  function goalsDelete(goalId) {\n    // console.log(moment().weekday() );\n\n    for(var i = 0; i< goals.all.length; i++) {\n      if(goals.all[i]._id === goalId)\n        goals.all[i].$remove(() => {\n          goals.all = Goal.query();\n        });\n    }\n  }\n\n\n  function editGoals(goalId) {\n    for(var i = 0; i< goals.all.length; i++) {\n      if(goals.all[i]._id === goalId)\n        goals.editGoal = goals.all[i];\n    }\n  }\n\n  function update() {\n    goals.editGoal.$update(() => {\n      goals.all = Goal.query();\n    });\n  }\n}\n","angular.module('foodApp')\n  .factory('Goal', Goal);\n\nGoal.$inject = ['$resource'];\nfunction Goal($resource) {\n  return new $resource('/goals/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'moment'];\nfunction MainController($auth, $state, $rootScope, moment) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  function createChart() {\n\n    const ctx = document.getElementById('myChart');\n    const myChart = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: ['Fibre', 'Protein', 'Carbohydrate', 'Fats', 'Water'],\n        datasets: [{\n          label: 'Foods',\n          data: [12, 30, 200, 20, 40],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)'\n          ],\n          borderColor: [\n            'rgba(255,99,132,1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)'\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    });\n  }\n  main.createChart= createChart;\n  main.createChart();\n}\n","angular.module('foodApp')\n.controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User', '$auth'];\nfunction UsersIndexController(User, $auth) {\n  const usersIndex = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    usersIndex.currentUser = user;\n    usersIndex.all = User.query();\n  });\n\n  function follow(user) {\n    usersIndex.currentUser.following.push(user);\n    usersIndex.currentUser.$update(() => {\n      console.log('user @\\'d');\n    });\n  }\n\n  function unfollow(user) {\n    const i = usersIndex.currentUser.following.indexOf(user._id);\n    if(i !== -1) {\n      usersIndex.currentUser.following.splice(i, 1);\n      usersIndex.currentUser.$update(() => {\n        console.log('I can\\'t belive you\\'ve done this');\n      });\n    }\n  }\n\n  function isFollowing(user) {\n    return usersIndex.currentUser.following.filter((id) => {\n      return id === user._id;\n    }).length;\n  }\n\n  function isSelf(user) {\n    return user._id === usersIndex.currentUser._id;\n  }\n\n  usersIndex.isSelf = isSelf;\n  usersIndex.isFollowing = isFollowing;\n\n  usersIndex.follow = follow;\n  usersIndex.unfollow = unfollow;\n  usersIndex.filter = { username: '' };\n}\n","angular.module('foodApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}