{"version":3,"sources":["js/app.js","js/controllers/food.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","FoodsIndexController","Food","foodsIndex","this","all","query","FoodsNewController","$state","create","save","foodsNew","food","go","FoodsShowController","$auth","deleteFood","foodsShow","$remove","get","params","delete","isLoggedIn","isAuthenticated","FoodsEditController","update","foodsEdit","$update","angular","module","config","$inject"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,YACLC,IAAK,aACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,aACLC,IAAK,aACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,aACLC,IAAK,kBACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAMhBJ,EAAmBK,UAAU,UAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GAE5BH,EAAcI,UACZC,SAAU,qBChDd,QAASC,sBAAqBC,GAC5B,GAAMC,GAAaC,IAEnBD,GAAWE,IAAMH,EAAKI,QAGxB,QAASC,oBAAmBL,EAAMM,GAKhC,QAASC,KACPP,EAAKQ,KAAKC,EAASC,KAAM,WACvBJ,EAAOK,GAAG,gBANd,GAAMF,GAAWP,IAEjBO,GAASC,QAOTD,EAASF,OAASA,EAGpB,QAASK,qBAAoBZ,EAAMM,EAAQO,GAKzC,QAASC,KACPC,EAAUL,KAAKM,QAAQ,WACrBV,EAAOK,GAAG,gBANd,GAAMI,GAAYb,IAElBa,GAAUL,KAAOV,EAAKiB,IAAIX,EAAOY,QAQjCH,EAAUI,OAASL,EACnBC,EAAUK,WAAaP,EAAMQ,gBAI/B,QAASC,qBAAoBtB,EAAMM,GAKjC,QAASiB,KACPC,EAAUd,KAAKe,QAAQ,WACrBnB,EAAOK,GAAG,YAAaL,EAAOY,UANlC,GAAMM,GAAYtB,IAElBsB,GAAUd,KAAOV,EAAKiB,IAAIX,EAAOY,QAQjChB,KAAKqB,OAASA,EDnDhBG,QACGC,OAAO,WAAY,aAAc,YAAa,eAC9CC,OAAO5C,QACP4C,OAAOpC,MAEVR,OAAO6C,SAAW,iBAAkB,sBAwCpCrC,KAAKqC,SAAW,iBC7ChBH,QAAQC,OAAO,WACZrC,WAAW,uBAAwBS,sBAGtCA,qBAAqB8B,SAAW,QAMhCxB,mBAAmBwB,SAAW,OAAQ,UAatCjB,oBAAoBiB,SAAW,OAAQ,SAAU,SAgBjDP,oBAAoBO,SAAW,OAAQ","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsIndexController as foodsIndex'\n    })\n    .state('foodsNew', {\n      url: '/foods/new',\n      templateUrl: '/templates/foodsNew.html',\n      controller: 'FoodsNewController as foodsNew'\n    })\n    .state('foodsShow', {\n      url: '/foods/:id',\n      templateUrl: '/templates/foodsShow.html',\n      controller: 'FoodsShowController as foodsShow'\n    })\n    .state('foodsEdit', {\n      url: '/foods/:id/edit',\n      templateUrl: '/templates/foodsEdit.html',\n      controller: 'FoodsEditController as foodsEdit'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    });\n\n\n\n\n  $urlRouterProvider.otherwise('/foods');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('FoodsIndexController', FoodsIndexController);\n\n\nFoodsIndexController.$inject = ['Food'];\nfunction FoodsIndexController(Food){\n  const foodsIndex = this;\n\n  foodsIndex.all = Food.query();\n}\nFoodsNewController.$inject = ['Food', '$state'];\nfunction FoodsNewController(Food, $state) {\n  const foodsNew = this;\n\n  foodsNew.food = {};\n\n  function create() {\n    Food.save(foodsNew.food, () => {\n      $state.go('foodsIndex');\n    });\n  }\n  foodsNew.create = create;\n}\nFoodsShowController.$inject = ['Food', '$state', '$auth'];\nfunction FoodsShowController(Food, $state, $auth) {\n  const foodsShow = this;\n\n  foodsShow.food = Food.get($state.params);\n\n  function deleteFood() {\n    foodsShow.food.$remove(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  foodsShow.delete = deleteFood;\n  foodsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nFoodsEditController.$inject = ['Food', '$state'];\nfunction FoodsEditController(Food, $state) {\n  const foodsEdit = this;\n\n  foodsEdit.food = Food.get($state.params);\n\n  function update() {\n    foodsEdit.food.$update(() => {\n      $state.go('foodsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n"]}