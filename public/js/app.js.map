{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/dragDrop.js","js/controllers/finance.js","js/models/finance.js","js/controllers/financeMain.js","js/controllers/food.js","js/models/food.js","js/controllers/main.js","js/controllers/picture.js","js/controllers/user.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","dragDrop","reader","FileReader","restrict","replace","scope","base64","src","link","$scope","element","active","$watchGroup","image","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","FinancesController","Finance","create","save","finances","financesNew","amountSpent","budget","document","getElementById","innerHTML","reload","financesDelete","financeId","all","i","length","_id","$remove","editFinances","editFinance","update","$update","edit","delete","query","$resource","id","method","financeMainController","moment","$rootScope","getFinances","main","amountCounter","allMyFinances","j","allFinance","thisUser","spent","indexOf","push","allMyFinance","todaysAmount","date","today","amount","subtract","format","yesterdayCounter","logout","secureState","toState","message","isAuthenticated","protectedStates","includes","name","getDays","days","day","getAmount","k","createChart","data","chartElement","chart","destroy","Chart","type","dailyChart","labels","datapoints","chartData","weeklyChart","monthlyChart","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","isLoggedIn","User","get","getPayload","$on","canShowCanvas","CountdownController","getTimeRemaining","endtime","t","Date","parse","seconds","Math","floor","minutes","hours","total","initializeClock","updateClock","daysSpan","hoursSpan","slice","minutesSpan","secondsSpan","clearInterval","timeinterval","clock","querySelector","setInterval","deadline","FoodsController","Food","foods","foodsNew","res","eaten","reset","foodsDelete","foodId","splice","editFoods","editFood","MainController","getFoods","caloryCounter","allMyFoods","allFood","todaysCals","calories","getCalories","PicturesBeforeController","picturesBefore","PicturesAfterController","picturesAfter","UsersIndexController","follow","usersIndex","currentUser","following","unfollow","isFollowing","filter","isSelf","setGoals","dietGoals","goal","dietGoalDates","targetDate","username","angular","module","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer', 'angularMoment'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsController as foods'\n    })\n    .state('leaderboard', {\n      url: '/leaderboard',\n      templateUrl: '/templates/leaderboard.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'RegisterController as register'\n    })\n    .state('select', {\n      url: '/select',\n      templateUrl: '/templates/select.html'\n    })\n    .state('dietProfile', {\n      url: '/dietProfile',\n      templateUrl: '/templates/dietProfile.html'\n    })\n    .state('dietFriends', {\n      url: '/dietFriends',\n      templateUrl: '/templates/dietFriends.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('finances', {\n      url: '/finances',\n      templateUrl: '/templates/finances.html',\n      controller: 'FinancesController as finances'\n    })\n    .state('picturesBefore', {\n      url: '/pictures/before',\n      templateUrl: '/templates/picturesBefore.html',\n      controller: 'PicturesBeforeController as picturesBefore'\n    })\n    .state('picturesAfter', {\n      url: '/pictures/after',\n      templateUrl: '/templates/picturesAfter.html',\n      controller: 'PicturesAfterController as picturesAfter'\n    });\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n  .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '=',\n      src: '='\n    },\n\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      $scope.$watchGroup(['base64', 'src'], () => {\n        $scope.image = $scope.base64 || $scope.src;\n        console.log($scope);\n      });\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n\n      };\n\n      element\n        .on('dragenter', () => {\n          $scope.active = true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) => {\n          e.preventDefault();\n        })\n        .on('dragleave', () => {\n          $scope.active = false;\n          $scope.$apply();\n        })\n      .on('drop', (e) => {\n        e.preventDefault();\n        const file = (e.target.files || e.dataTransfer.files)[0];\n\n\n        reader.readAsDataURL(file);\n      });\n    }\n  };\n}\n","angular.module('foodApp')\n// .controller('FinancesIndexController', FinancesIndexController)\n// .controller('FinancesNewController', FinancesNewController)\n// .controller('FinancesShowController', FinancesShowController)\n// .controller('FinancesEditController', FinancesEditController)\n.controller('FinancesController', FinancesController);\n\n\n\nFinancesController.$inject = ['Finance', '$state', '$auth'];\nlet budget = 500;\nfunction FinancesController(Finance, $state) {\n\n\n\n  const finances = this;\n  // finance.getIndex = getIndex;\n  // finance.newFinance = newFinance;\n  // finance.showFinances = showFinances;\n  finances.edit = editFinances;\n  finances.create = create;\n  finances.delete = financesDelete;\n  finances.editFinance = {};\n  finances.update = update;\n\n  finances.all = Finance.query();\n\n\n  finances.financesNew = {};\n\n\n  function create() {\n    Finance.save(finances.financesNew, () => {\n      const amountSpent = finances.financesNew.amountSpent;\n      budget -= amountSpent;\n      console.log(budget);\n      budget = document.getElementById('budgetText').innerHTML;\n      console.log(budget);\n      $state.reload();\n    });\n  }\n\n  function financesDelete(financeId) {\n    console.log(finances.all);\n\n    for(var i = 0; i< finances.all.length; i++) {\n      if(finances.all[i]._id === financeId)\n        finances.all[i].$remove(() => {\n          $state.reload();\n        });\n    }\n  }\n\n\n  function editFinances(financeId) {\n    for(var i = 0; i< finances.all.length; i++) {\n      if(finances.all[i]._id === financeId)\n        finances.editFinance = finances.all[i];\n    }\n  }\n\n  function update() {\n    finances.editFinance.$update(() => {\n      $state.reload();\n    });\n  }\n}\n","angular.module('foodApp')\n  .factory('Finance', Finance);\n\nFinance.$inject = ['$resource'];\nfunction Finance($resource) {\n  return new $resource('/finances/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n  .controller('financeMainController', financeMainController);\n\n\nfinanceMainController.$inject = ['moment','Finance','User','$auth', '$state', '$rootScope'];\nfunction financeMainController(moment, $auth, $state, Finance, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  main.todaysAmount= todaysAmount;\n  main.allFinance = Finance.query();\n  main.yesterdayCounter = 0;\n  main.amountCounter = 0;\n  main.allMyFinances = [];\n  main.today = moment().format('DD/MM/YYYY');\n\n  const thisUser = User.get({ id: $auth.getPayload()._id });\n\n  function getFinances() {\n    main.amountCounter = 0;\n    main.allMyFinances = [];\n    for(let j=0; j<main.allFinance.length; j++) {\n      if(thisUser.spent.indexOf(main.allFinance[j]._id) !== -1) {\n        main.allMyFinances.push(main.allMyFinance[j]);\n      }\n    }\n  }\n  function todaysAmount() {\n    getFinances();\n    //should turn this into a switch statement v\n    for(let i=0; i<main.allMyFinances.length; i++) {\n      if (main.allMyFinances[i].date == main.today){\n        main.amountCounter += main.allMyFinances[i].amount;\n      }\n      else if (main.allMyFinances[i].date == moment().subtract(1, 'days').format('DD/MM/YYYY')) {\n        main.yesterdayCounter += main.allMyFinances[i].amount;\n      }\n    }\n    console.log(main.allMyFinances);\n  }\n\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('financesIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  let days = [];\n  function getDays() {\n    days = [];\n    for (let day=1; day<7; day ++) {\n      days.push( {\n        date: moment().subtract(day, 'days').format('DD/MM/YYYY'),\n        amount: 0\n      });\n    }\n    getAmount();\n    console.log(days);\n  }\n  function getAmount() {\n    for (let i=0; i<days.length; i++) {\n      for (let k = 0; k< main.allMyFinances.length; k++) {\n        if(main.allMyFinances[k].date === days[i].date) {\n          days[i].amount += main.allMyFinances[k].amount;\n        }\n      }\n    }\n  }\n\n  main.createChart = createChart;\n\n\n  main.canShowCanvas = true;\n\n  let labels = [];\n  let datapoints = [];\n  let chart = null;\n\n\n  function createChart(data) {\n\n    const chartElement = document.getElementById('myChart1');\n\n    if (chart && chart.destroy) {\n      chart.destroy();\n    }\n    chart = new Chart(chartElement, {\n      type: 'line',\n      data: data\n    });\n  }\n\n  function dailyChart() {\n    todaysAmount();\n    getDays();\n    labels = ['Entertanment', 'Food', 'Utilities', 'Rent', 'Car'];\n    datapoints = [12, 30, 200, 20, 50];\n    chartData(labels, datapoints);\n  }\n  function weeklyChart() {\n    todaysAmount();\n    getDays();\n    labels = [days[5].date, days[4].date, days[3].date, days[2].date, days[1].date, days[0].date, 'Today'];\n    datapoints = [days[5].amount, days[4].amount, days[3].amount, days[2].amount, days[1].amount, days[0].amount, main.amountCounter];\n    chartData(labels, datapoints);\n  }\n  function monthlyChart() {\n    todaysAmount();\n    getDays();\n    labels = [];\n    datapoints = [];\n    chartData(labels, datapoints);\n  }\n\n  function chartData(labels, datapoints) {\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'My First dataset',\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: datapoints,\n          spanGaps: false\n        }\n      ]\n    };\n    createChart(data);\n\n  }\n\n  main.dailyChart = dailyChart;\n  main.weeklyChart = weeklyChart;\n  main.monthlyChart = monthlyChart;\n}\n\nCountdownController.$inject = [];\nfunction CountdownController() {\n  function getTimeRemaining(endtime) {\n    var t = Date.parse(endtime) - Date.parse(new Date());\n    var seconds = Math.floor((t / 1000) % 60);\n    var minutes = Math.floor((t / 1000 / 60) % 60);\n    var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n    var days = Math.floor(t / (1000 * 60 * 60 * 24));\n    return {\n      'total': t,\n      'days': days,\n      'hours': hours,\n      'minutes': minutes,\n      'seconds': seconds\n    };\n  }\n\n  function initializeClock(id, endtime) {\n    var clock = document.getElementById(id);\n    var daysSpan = clock.querySelector('.days');\n    var hoursSpan = clock.querySelector('.hours');\n    var minutesSpan = clock.querySelector('.minutes');\n    var secondsSpan = clock.querySelector('.seconds');\n\n    function updateClock() {\n      var t = getTimeRemaining(endtime);\n\n      daysSpan.innerHTML = t.days;\n      hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\n      minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\n      secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\n\n      if (t.total <= 0) {\n        clearInterval(timeinterval);\n      }\n    }\n\n    updateClock();\n    var timeinterval = setInterval(updateClock, 1000);\n  }\n\n  var deadline = new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000);\n  initializeClock('clockdiv', deadline);\n\n\n\n}\n","angular.module('foodApp')\n// .controller('FoodsIndexController', FoodsIndexController)\n// .controller('FoodsNewController', FoodsNewController)\n// .controller('FoodsShowController', FoodsShowController)\n// .controller('FoodsEditController', FoodsEditController)\n.controller('FoodsController', FoodsController);\n\n\n\nFoodsController.$inject = ['Food', 'User', '$auth', '$state', 'moment'];\nfunction FoodsController(Food, User, $auth, $state, moment) {\n\n  const foods = this;\n  foods.edit = editFoods;\n  foods.create = create;\n  foods.delete = foodsDelete;\n  foods.editFood = {};\n  foods.update = update;\n  foods.foodsNew = {};\n  foods.foodsNew.date = moment().format('DD/MM/YYYY');\n\n  const thisUser = User.get({ id: $auth.getPayload()._id });\n\n  Food.query((res) => {\n    foods.all = res;\n    thisUser.$update();\n  });\n\n  function create() {\n    Food.save(foods.foodsNew, () => {\n      Food.query((res) => {\n        foods.all = res;\n        thisUser.$update();\n        thisUser.eaten.push(foods.all[foods.all.length-1]);\n        console.log(thisUser);\n      });\n      document.getElementById('createFood').reset();\n    });\n  }\n\n  function foodsDelete(foodId) {\n    // console.log(foods.all);\n\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.all[i].$remove(() => {\n          foods.all = Food.query();\n        });\n      const j = thisUser.eaten.indexOf(foodId);\n      if (j !== -1) {\n        thisUser.eaten.splice(j, 1);\n      }\n    }\n    thisUser.$update();\n    console.log(thisUser);\n  }\n\n\n\n\n  function editFoods(foodId) {\n    thisUser.$update();\n    console.log(thisUser);\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.editFood = foods.all[i];\n    }\n  }\n\n  function update() {\n    foods.editFood.$update(() => {\n      foods.all = Food.query();\n    });\n  }\n\n\n\n\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n.controller('MainController', MainController)\n.controller('CountdownController', CountdownController);\n\n\n\nMainController.$inject = ['moment', 'Food', 'User', '$auth', '$state', '$rootScope'];\nfunction MainController(moment, Food, User, $auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  main.todaysCals = todaysCals;\n  main.allFood = Food.query();\n  main.yesterdayCounter = 0;\n  main.caloryCounter = 0;\n  main.allMyFoods = [];\n  main.today = moment().format('DD/MM/YYYY');\n\n  const thisUser = User.get({ id: $auth.getPayload()._id });\n\n\n  //this function gets just this current users foods from all existing foods. pushes them to main.allMyFoods\n  function getFoods() {\n    main.caloryCounter = 0;\n    main.allMyFoods = [];\n    for(let j=0; j<main.allFood.length; j++) {\n      if(thisUser.eaten.indexOf(main.allFood[j]._id) !== -1) {\n        main.allMyFoods.push(main.allFood[j]);\n      }\n    }\n  }\n\n  //this function checks if items in users foods were eaten on this weekday and adds up calories for just those items.\n  //instead of going by weekday will need to change this to specific date. could base axis on charts on weekday though.\n  function todaysCals() {\n    getFoods();\n    //should turn this into a switch statement v\n    for(let i=0; i<main.allMyFoods.length; i++) {\n      if (main.allMyFoods[i].date == main.today){\n        main.caloryCounter += main.allMyFoods[i].calories;\n      }\n      else if (main.allMyFoods[i].date == moment().subtract(1, 'days').format('DD/MM/YYYY')) {\n        main.yesterdayCounter += main.allMyFoods[i].calories;\n      }\n    }\n    console.log(main.allMyFoods);\n  }\n\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  let days = [];\n  //function to populate a weeks worth of objects with dates and calories. they will update each day.\n  function getDays() {\n    days = [];\n    for (let day=1; day<7; day ++) {\n      days.push( {\n        date: moment().subtract(day, 'days').format('DD/MM/YYYY'),\n        calories: 0\n      });\n    }\n    getCalories();\n    console.log(days);\n  }\n\n  function getCalories() {\n    for (let i=0; i<days.length; i++) {\n      for (let k = 0; k< main.allMyFoods.length; k++) {\n        if(main.allMyFoods[k].date === days[i].date) {\n          days[i].calories += main.allMyFoods[k].calories;\n        }\n      }\n    }\n  }\n\n\n\n  main.createChart = createChart;\n\n\n\n\n\n\n  main.canShowCanvas = true;\n\n  let labels = [];\n  let datapoints = [];\n  let chart = null;\n\n  function createChart(data) {\n\n\n    const chartElement = document.getElementById('myChart');\n\n\n\n    if (chart && chart.destroy) {\n      chart.destroy();\n    }\n    chart = new Chart(chartElement, {\n      type: 'line',\n      data: data\n    });\n  }\n\n  function dailyChart() {\n    todaysCals();\n    getDays();\n    labels = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    datapoints = [65, 59, 80, 81, 56, 55, 40];\n    chartData(labels, datapoints);\n  }\n\n  function weeklyChart() {\n    todaysCals();\n    getDays();\n    labels = [days[5].date, days[4].date, days[3].date, days[2].date, days[1].date, days[0].date, 'Today'];\n    datapoints = [days[5].calories, days[4].calories, days[3].calories, days[2].calories, days[1].calories, days[0].calories, main.caloryCounter];\n    chartData(labels, datapoints);\n\n  }\n\n  function monthlyChart() {\n    todaysCals();\n    getDays();\n    labels = [];\n    datapoints = [];\n    chartData(labels, datapoints);\n  }\n\n  function chartData(labels, datapoints) {\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'My First dataset',\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: datapoints,\n          spanGaps: false\n        }\n      ]\n    };\n    createChart(data);\n\n\n\n  }\n\n  main.dailyChart = dailyChart;\n  main.weeklyChart = weeklyChart;\n  main.monthlyChart = monthlyChart;\n}\n\nCountdownController.$inject = [];\nfunction CountdownController() {\n  function getTimeRemaining(endtime) {\n    var t = Date.parse(endtime) - Date.parse(new Date());\n    var seconds = Math.floor((t / 1000) % 60);\n    var minutes = Math.floor((t / 1000 / 60) % 60);\n    var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n    var days = Math.floor(t / (1000 * 60 * 60 * 24));\n    return {\n      'total': t,\n      'days': days,\n      'hours': hours,\n      'minutes': minutes,\n      'seconds': seconds\n    };\n  }\n\n  function initializeClock(id, endtime) {\n    var clock = document.getElementById(id);\n    var daysSpan = clock.querySelector('.days');\n    var hoursSpan = clock.querySelector('.hours');\n    var minutesSpan = clock.querySelector('.minutes');\n    var secondsSpan = clock.querySelector('.seconds');\n\n    function updateClock() {\n      var t = getTimeRemaining(endtime);\n\n      daysSpan.innerHTML = t.days;\n      hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\n      minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\n      secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\n\n      if (t.total <= 0) {\n        clearInterval(timeinterval);\n      }\n    }\n\n    updateClock();\n    var timeinterval = setInterval(updateClock, 1000);\n  }\n\n  var deadline = new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000);\n  initializeClock('clockdiv', deadline);\n\n\n\n}\n","angular.module('foodApp')\n  .controller('PicturesBeforeController', PicturesBeforeController)\n  .controller('PicturesAfterController', PicturesAfterController);\n\nPicturesBeforeController.$inject = ['User', '$auth', '$state'];\nfunction PicturesBeforeController(User, $auth, $state) {\n\n  const picturesBefore = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    console.log(user);\n    picturesBefore.user = user;\n  });\n\n  function save() {\n    console.log('picture: ', picturesBefore);\n    // User.update({ id: picturesBefore.user._id }, {before: picturesBefore.base64 }),((err, person ) => {\n    //   if(err) return console.log(err);\n    //   console.log(person);\n    User.update({ id: picturesBefore.user._id, image: 'before' }, picturesBefore.user, () => {\n      $state.go('dietProfile');\n    });\n  }\n\n  picturesBefore.save = save;\n}\n\nPicturesAfterController.$inject = ['User', '$auth', '$state'];\nfunction PicturesAfterController(User, $auth, $state) {\n\n  const picturesAfter = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    picturesAfter.user = user;\n  });\n\n  function save() {\n    User.update({ id: picturesAfter.user._id, image: 'after' }, picturesAfter.user, () => {\n      $state.go('dietProfile');\n    });\n  }\n\n  picturesAfter.save = save;\n}\n","angular.module('foodApp')\n.controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User', '$auth'];\nfunction UsersIndexController(User, $auth) {\n  const usersIndex = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    usersIndex.currentUser = user;\n    usersIndex.all = User.query();\n  });\n\n  function follow(user) {\n    usersIndex.currentUser.following.push(user);\n    usersIndex.currentUser.$update(() => {\n      console.log('user @\\'d');\n    });\n  }\n\n  function unfollow(user) {\n    const i = usersIndex.currentUser.following.indexOf(user._id);\n    if(i !== -1) {\n      usersIndex.currentUser.following.splice(i, 1);\n      usersIndex.currentUser.$update(() => {\n        console.log('I can\\'t belive you\\'ve done this');\n      });\n    }\n  }\n\n  function isFollowing(user) {\n    return usersIndex.currentUser.following.filter((id) => {\n      return id === user._id;\n    }).length;\n  }\n\n  function isSelf(user) {\n    return user._id === usersIndex.currentUser._id;\n  }\n\n  usersIndex.isSelf = isSelf;\n  usersIndex.isFollowing = isFollowing;\n\n  usersIndex.follow = follow;\n  usersIndex.unfollow = unfollow;\n  usersIndex.filter = { username: '' };\n\n\n  function setGoals(user) {\n    user.dietGoals = user.goal;\n    user.dietGoalDates = user.targetDate;\n    usersIndex.currentUser.$update(() => {\n      console.log('Don\\'t let your dreams be dreams');\n    });\n  }\n\n  usersIndex.setGoals = setGoals;\n}\n","angular.module('foodApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}