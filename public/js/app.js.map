{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/food.js","js/models/food.js","js/controllers/user.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","FoodsController","Food","create","save","foods","foodsNew","reload","foodsDelete","foodId","all","i","length","_id","$remove","editFoods","editFood","update","$update","edit","delete","query","$resource","id","method","UsersIndexController","User","follow","usersIndex","currentUser","following","push","unfollow","indexOf","splice","isFollowing","filter","isSelf","createChart","ctx","document","getElementById","Chart","type","data","dailyChart","labels","datapoints","chartData","weeklyChart","monthlyChart","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","setGoals","dietGoals","goal","dietGoalDates","targetDate","get","getPayload","username","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsController as foods'\n    })\n    .state('goalsIndex', {\n      url: '/goals',\n      templateUrl: '/templates/goalsIndex.html',\n      controller: 'GoalsController as goals'\n    })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'RegisterController as register'\n    })\n    .state('select', {\n      url: '/select',\n      templateUrl: '/templates/select.html'\n    })\n    .state('dietProfile', {\n      url: '/dietProfile',\n      templateUrl: '/templates/dietProfile.html'\n    })\n    .state('dietFriends', {\n      url: '/dietFriends',\n      templateUrl: '/templates/dietFriends.html',\n      controller: 'UsersIndexController as usersIndex'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n// .controller('FoodsIndexController', FoodsIndexController)\n// .controller('FoodsNewController', FoodsNewController)\n// .controller('FoodsShowController', FoodsShowController)\n// .controller('FoodsEditController', FoodsEditController)\n.controller('FoodsController', FoodsController);\n\n\n\nFoodsController.$inject = ['Food', '$state', '$auth'];\nfunction FoodsController(Food, $state) {\n\n  const foods = this;\n  // foods.getIndex = getIndex;\n  // foods.newFood = newFood;\n  // foods.showFoods = showFoods;\n  foods.edit = editFoods;\n  foods.create = create;\n  foods.delete = foodsDelete;\n  foods.editFood = {};\n  foods.update = update;\n\n  foods.all = Food.query();\n\n\n  foods.foodsNew = {};\n\n\n  function create() {\n    Food.save(foods.foodsNew, () => {\n      $state.reload();\n    });\n  }\n\n  function foodsDelete(foodId) {\n    console.log(foods.all);\n\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.all[i].$remove(() => {\n          $state.reload();\n        });\n    }\n  }\n\n\n  function editFoods(foodId) {\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.editFood = foods.all[i];\n    }\n  }\n\n  function update() {\n    foods.editFood.$update(() => {\n      $state.reload();\n    });\n  }\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n.controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User', '$auth'];\nfunction UsersIndexController(User, $auth) {\n  const usersIndex = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    usersIndex.currentUser = user;\n    usersIndex.all = User.query();\n  });\n\n  function follow(user) {\n    usersIndex.currentUser.following.push(user);\n    usersIndex.currentUser.$update(() => {\n      console.log('user @\\'d');\n    });\n  }\n\n  function unfollow(user) {\n    const i = usersIndex.currentUser.following.indexOf(user._id);\n    if(i !== -1) {\n      usersIndex.currentUser.following.splice(i, 1);\n      usersIndex.currentUser.$update(() => {\n        console.log('I can\\'t belive you\\'ve done this');\n      });\n    }\n  }\n\n  function isFollowing(user) {\n    return usersIndex.currentUser.following.filter((id) => {\n      return id === user._id;\n    }).length;\n  }\n\n  function isSelf(user) {\n    return user._id === usersIndex.currentUser._id;\n  }\n\n  usersIndex.isSelf = isSelf;\n  usersIndex.isFollowing = isFollowing;\n\n  usersIndex.follow = follow;\n  usersIndex.unfollow = unfollow;\n  usersIndex.filter = { username: '' };\n\n  let data = {};\n  let labels = [];\n  let datapoints = [];\n\n  function createChart() {\n    const ctx = document.getElementById('myChart');\n    const myChart = new Chart(ctx, {\n      type: 'line',\n      data: data\n    });\n  }\n\n  function dailyChart() {\n    labels = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    datapoints = [65, 59, 80, 81, 56, 55, 40];\n    chartData(labels, datapoints);\n  }\n\n  function weeklyChart() {\n    labels = ['1', '2', '3', '4', '5', '6', '7'];\n    datapoints = [312, 265, 470, 285, 523, 547, 342];\n    chartData(labels, datapoints);\n  }\n\n  function monthlyChart() {\n    labels = ['January','February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    datapoints = [1865, 1759, 2180, 2281, 1856, 1755, 1940, 2180, 2281, 1856, 1755, 1940];\n    chartData(labels, datapoints);\n  }\n\n  function chartData(labels, datapoints) {\n    data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'My First dataset',\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: datapoints,\n          spanGaps: false\n        }\n      ]\n    };\n    console.log('logging');\n    usersIndex.createChart();\n  }\n\n  usersIndex.createChart = createChart;\n  usersIndex.dailyChart = dailyChart;\n  usersIndex.weeklyChart = weeklyChart;\n  usersIndex.monthlyChart = monthlyChart;\n\n  function setGoals(user) {\n    user.dietGoals = user.goal;\n    user.dietGoalDates = user.targetDate;\n    usersIndex.currentUser.$update(() => {\n      console.log('Don\\'t let your dreams be dreams');\n    });\n  }\n\n  usersIndex.setGoals = setGoals;\n}\n","angular.module('foodApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}