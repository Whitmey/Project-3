{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/food.js","js/models/food.js","js/controllers/main.js","js/controllers/user.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","FoodsController","Food","User","create","save","foods","foodsNew","query","res","all","thisUser","$update","eaten","push","length","document","getElementById","reset","foodsDelete","foodId","i","_id","$remove","j","indexOf","splice","editFoods","editFood","update","edit","delete","get","id","getPayload","$resource","method","MainController","$rootScope","logout","secureState","e","toState","main","message","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","$on","CountdownController","getTimeRemaining","endtime","t","Date","parse","seconds","Math","floor","minutes","hours","days","total","initializeClock","updateClock","daysSpan","innerHTML","hoursSpan","slice","minutesSpan","secondsSpan","clearInterval","timeinterval","clock","querySelector","setInterval","deadline","UsersIndexController","follow","usersIndex","currentUser","following","unfollow","isFollowing","filter","isSelf","createChart","data","chartElement","chart","destroy","Chart","type","dailyChart","labels","datapoints","chartData","weeklyChart","monthlyChart","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","setGoals","dietGoals","goal","dietGoalDates","targetDate","username","canShowCanvas","angular","module","config","$inject","factory"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,6BAObH,MAAM,SACLC,IAAK,IACLC,YAAa,0BACbC,WAAY,6BAEbH,MAAM,YACLC,IAAK,IACLC,YAAa,0BACbC,WAAY,mCAEbH,MAAM,UACLC,IAAK,UACLC,YAAa,2BAEdF,MAAM,eACLC,IAAK,eACLC,YAAa,gCAEdF,MAAM,eACLC,IAAK,eACLC,YAAa,8BACbC,WAAY,uCAGhBJ,EAAmBK,UAAU,KAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GAE5BH,EAAcI,UACZC,SAAU,qBChDd,QAASC,oBAAmBC,EAAOC,GAGjC,QAASC,KACPC,QAAQC,IAAIC,EAASC,MACrBN,EAAMO,OAAOF,EAASC,MACrBE,KAAK,WACJP,EAAOQ,GAAG,gBANd,GAAMJ,GAAWK,IACjBL,GAASC,QAQTD,EAASH,OAASA,EAIpB,QAASS,iBAAgBX,EAAOC,GAG9B,QAASC,KACPC,QAAQC,IAAIQ,EAAMC,aAClBb,EAAMY,MAAMA,EAAMC,aACjBL,KAAK,WACJP,EAAOQ,GAAG,YAGd,QAASK,GAAaC,GACpBf,EAAMc,aAAaC,GAClBP,KAAK,WAEJP,EAAOQ,GAAG,YAbd,GAAMG,GAAQF,IACdE,GAAMC,eAeND,EAAMV,OAASA,EACfU,EAAME,aAAeA,EC3BvB,QAASE,iBAAgBC,EAAMC,EAAMlB,EAAOC,GAiB1C,QAASkB,KACPF,EAAKG,KAAKC,EAAMC,SAAU,WACxBL,EAAKM,MAAM,SAACC,GACVH,EAAMI,IAAMD,EACZE,EAASC,UACTD,EAASE,MAAMC,KAAKR,EAAMI,IAAIJ,EAAMI,IAAIK,OAAO,IAC/C3B,QAAQC,IAAIsB,KAEdK,SAASC,eAAe,cAAcC,UAI1C,QAASC,GAAYC,GAGnB,IAAI,GAAIC,GAAI,EAAGA,EAAGf,EAAMI,IAAIK,OAAQM,IAAK,CACpCf,EAAMI,IAAIW,GAAGC,MAAQF,GACtBd,EAAMI,IAAIW,GAAGE,QAAQ,WACnBjB,EAAMI,IAAMR,EAAKM,SAErB,IAAMgB,GAAIb,EAASE,MAAMY,QAAQL,EAC7BI,MAAM,GACRb,EAASE,MAAMa,OAAOF,EAAG,GAG7Bb,EAASC,UACTxB,QAAQC,IAAIsB,GAMd,QAASgB,GAAUP,GACjBT,EAASC,UACTxB,QAAQC,IAAIsB,EACZ,KAAI,GAAIU,GAAI,EAAGA,EAAGf,EAAMI,IAAIK,OAAQM,IAC/Bf,EAAMI,IAAIW,GAAGC,MAAQF,IACtBd,EAAMsB,SAAWtB,EAAMI,IAAIW,IAIjC,QAASQ,KACPvB,EAAMsB,SAAShB,QAAQ,WACrBN,EAAMI,IAAMR,EAAKM,UA1DrB,GAAMF,GAAQX,IACdW,GAAMwB,KAAOH,EACbrB,EAAMF,OAASA,EACfE,EAAMyB,OAASZ,EACfb,EAAMsB,YACNtB,EAAMuB,OAASA,EACfvB,EAAMC,WAEN,IAAMI,GAAWR,EAAK6B,KAAMC,GAAIhD,EAAMiD,aAAaZ,KAEnDpB,GAAKM,MAAM,SAACC,GACVH,EAAMI,IAAMD,EACZE,EAASC,YCpBb,QAASV,MAAKiC,GACZ,MAAO,IAAIA,GAAU,cAAgBF,GAAI,SACvCJ,QAAUO,OAAQ,SCAtB,QAASC,gBAAepD,EAAOC,EAAQoD,GAMrC,QAASC,KACPtD,EAAMsD,SACL9C,KAAK,WACJP,EAAOQ,GAAG,gBAMd,QAAS8C,GAAYC,EAAGC,GACtBC,EAAKC,QAAU,MACX3D,EAAM4D,mBAAqBC,EAAgBC,SAASL,EAAQM,QAC9DP,EAAEQ,iBACF/D,EAAOQ,GAAG,SACViD,EAAKC,QAAU,kCAnBnB,GAAMD,GAAOhD,IAEbgD,GAAKO,WAAajE,EAAM4D,gBACxBF,EAAKC,QAAU,IASf,IAAME,KAWNR,GAAWa,IAAI,mBAAoBX,GAEnCG,EAAKJ,OAASA,EAgChB,QAASa,uBACP,QAASC,GAAiBC,GACxB,GAAIC,GAAIC,KAAKC,MAAMH,GAAWE,KAAKC,MAAM,GAAID,OACzCE,EAAUC,KAAKC,MAAOL,EAAI,IAAQ,IAClCM,EAAUF,KAAKC,MAAOL,EAAI,IAAO,GAAM,IACvCO,EAAQH,KAAKC,MAAOL,EAAAA,KAAwB,IAC5CQ,EAAOJ,KAAKC,MAAML,EAAAA,MACtB,QACES,MAAST,EACTQ,KAAQA,EACRD,MAASA,EACTD,QAAWA,EACXH,QAAWA,GAIf,QAASO,GAAgBhC,EAAIqB,GAO3B,QAASY,KACP,GAAIX,GAAIF,EAAiBC,EAEzBa,GAASC,UAAYb,EAAEQ,KACvBM,EAAUD,WAAa,IAAMb,EAAEO,OAAOQ,OAAM,GAC5CC,EAAYH,WAAa,IAAMb,EAAEM,SAASS,OAAM,GAChDE,EAAYJ,WAAa,IAAMb,EAAEG,SAASY,OAAM,GAE5Cf,EAAES,OAAS,GACbS,cAAcC,GAflB,GAAIC,GAAQ3D,SAASC,eAAegB,GAChCkC,EAAWQ,EAAMC,cAAc,SAC/BP,EAAYM,EAAMC,cAAc,UAChCL,EAAcI,EAAMC,cAAc,YAClCJ,EAAcG,EAAMC,cAAc,WAetCV,IACA,IAAIQ,GAAeG,YAAYX,EAAa,KAG9C,GAAIY,GAAW,GAAItB,MAAKA,KAAKC,MAAM,GAAID,OAAU,OACjDS,GAAgB,WAAYa,GCnG9B,QAASC,sBAAqB5E,EAAMlB,GASlC,QAAS+F,GAAOzF,GACd0F,EAAWC,YAAYC,UAAUrE,KAAKvB,GACtC0F,EAAWC,YAAYtE,QAAQ,WAC7BxB,QAAQC,IAAI,cAIhB,QAAS+F,GAAS7F,GAChB,GAAM8B,GAAI4D,EAAWC,YAAYC,UAAU1D,QAAQlC,EAAK+B,IACrDD,MAAM,IACP4D,EAAWC,YAAYC,UAAUzD,OAAOL,EAAG,GAC3C4D,EAAWC,YAAYtE,QAAQ,WAC7BxB,QAAQC,IAAI,sCAKlB,QAASgG,GAAY9F,GACnB,MAAO0F,GAAWC,YAAYC,UAAUG,OAAO,SAACrD,GAC9C,MAAOA,KAAO1C,EAAK+B,MAClBP,OAGL,QAASwE,GAAOhG,GACd,MAAOA,GAAK+B,MAAQ2D,EAAWC,YAAY5D,IAe7C,QAASkE,GAAYC,GACnB,GAAMC,GAAe1E,SAASC,eAAe,UAEzC0E,IAASA,EAAMC,SACjBD,EAAMC,UAERD,EAAQ,GAAIE,OAAMH,GAChBI,KAAM,OACNL,KAAMA,IAIV,QAASM,KACPC,GAAU,SAAU,UAAW,YAAa,WAAY,SAAU,WAAY,UAC9EC,GAAc,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACtCC,EAAUF,EAAQC,GAGpB,QAASE,KACPH,GAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxCC,GAAc,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5CC,EAAUF,EAAQC,GAGpB,QAASG,KACPJ,GAAU,UAAU,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACvHC,GAAc,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAChFC,EAAUF,EAAQC,GAGpB,QAASC,GAAUF,EAAQC,GACzB,GAAMR,IACJO,OAAQA,EACRK,WAEIC,MAAO,mBACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,cACAC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB9B,KAAMQ,EACNuB,UAAU,IAIhBhC,GAAYC,GAOd,QAASgC,GAASlI,GAChBA,EAAKmI,UAAYnI,EAAKoI,KACtBpI,EAAKqI,cAAgBrI,EAAKsI,WAC1B5C,EAAWC,YAAYtE,QAAQ,WAC7BxB,QAAQC,IAAI,qCApHhB,GAAM4F,GAAatF,IAGnBQ,GAAK6B,KAAMC,GAAIhD,EAAMiD,aAAaZ,KAAO,SAAC/B,GACxC0F,EAAWC,YAAc3F,EACzB0F,EAAWvE,IAAMP,EAAKK,UA8BxByE,EAAWM,OAASA,EACpBN,EAAWI,YAAcA,EAEzBJ,EAAWD,OAASA,EACpBC,EAAWG,SAAWA,EACtBH,EAAWK,QAAWwC,SAAU,IAChC7C,EAAW8C,eAAgB,CAE3B,IAAI/B,MACAC,KACAN,EAAAA,MA+DJV,GAAWc,WAAaA,EACxBd,EAAWkB,YAAcA,EACzBlB,EAAWmB,aAAeA,EAU1BnB,EAAWwC,SAAWA,EC3HxB,QAAStH,MAAKgC,GACZ,MAAO,IAAIA,GAAU,cAAgBF,GAAI,SACvCJ,QAAUO,OAAQ,SNNtB4F,QACGC,OAAO,WAAY,aAAc,YAAa,aAAc,kBAC5DC,OAAOjK,QACPiK,OAAOzJ,MAEVR,OAAOkK,SAAW,iBAAkB,sBAwCpC1J,KAAK0J,SAAW,iBC7ChBH,QAAQC,OAAO,WACZ1J,WAAW,qBAAsBS,oBACjCT,WAAW,kBAAmBqB,iBAEjCZ,mBAAmBmJ,SAAW,QAAS,UAcvCvI,gBAAgBuI,SAAW,QAAS,UClBpCH,QAAQC,OAAO,WAKd1J,WAAW,kBAAmB0B,iBAI/BA,gBAAgBkI,SAAW,OAAQ,OAAQ,QAAS,UCTpDH,QAAQC,OAAO,WACZG,QAAQ,OAAQlI,MAEnBA,KAAKiI,SAAW,aCHhBH,QAAQC,OAAO,WACZ1J,WAAW,iBAAkB8D,gBAC7B9D,WAAW,sBAAuB6E,qBAGrCf,eAAe8F,SAAW,QAAS,SAAU,cA0D7C/E,oBAAoB+E,WC7DpBH,QAAQC,OAAO,WACd1J,WAAW,uBAAwBwG,sBAEpCA,qBAAqBoD,SAAW,OAAQ,SCLxCH,QAAQC,OAAO,WACZG,QAAQ,OAAQjI,MAEnBA,KAAKgI,SAAW","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer', 'angularMoment'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsController as foods'\n    })\n    // .state('goalsIndex', {\n    //   url: '/goals',\n    //   templateUrl: '/templates/goalsIndex.html',\n    //   controller: 'GoalsController as goals'\n    // })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'RegisterController as register'\n    })\n    .state('select', {\n      url: '/select',\n      templateUrl: '/templates/select.html'\n    })\n    .state('dietProfile', {\n      url: '/dietProfile',\n      templateUrl: '/templates/dietProfile.html'\n    })\n    .state('dietFriends', {\n      url: '/dietFriends',\n      templateUrl: '/templates/dietFriends.html',\n      controller: 'UsersIndexController as usersIndex'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n// .controller('FoodsIndexController', FoodsIndexController)\n// .controller('FoodsNewController', FoodsNewController)\n// .controller('FoodsShowController', FoodsShowController)\n// .controller('FoodsEditController', FoodsEditController)\n.controller('FoodsController', FoodsController);\n\n\n\nFoodsController.$inject = ['Food', 'User', '$auth', '$state'];\nfunction FoodsController(Food, User, $auth, $state) {\n\n  const foods = this;\n  foods.edit = editFoods;\n  foods.create = create;\n  foods.delete = foodsDelete;\n  foods.editFood = {};\n  foods.update = update;\n  foods.foodsNew = {};\n\n  const thisUser = User.get({ id: $auth.getPayload()._id });\n\n  Food.query((res) => {\n    foods.all = res;\n    thisUser.$update();\n  });\n\n  function create() {\n    Food.save(foods.foodsNew, () => {\n      Food.query((res) => {\n        foods.all = res;\n        thisUser.$update();\n        thisUser.eaten.push(foods.all[foods.all.length-1]);\n        console.log(thisUser);\n      });\n      document.getElementById('createFood').reset();\n    });\n  }\n\n  function foodsDelete(foodId) {\n    // console.log(foods.all);\n\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.all[i].$remove(() => {\n          foods.all = Food.query();\n        });\n      const j = thisUser.eaten.indexOf(foodId);\n      if (j !== -1) {\n        thisUser.eaten.splice(j, 1);\n      }\n    }\n    thisUser.$update();\n    console.log(thisUser);\n  }\n\n\n\n\n  function editFoods(foodId) {\n    thisUser.$update();\n    console.log(thisUser);\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.editFood = foods.all[i];\n    }\n  }\n\n  function update() {\n    foods.editFood.$update(() => {\n      foods.all = Food.query();\n    });\n  }\n\n\n\n\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n  .controller('MainController', MainController)\n  .controller('CountdownController', CountdownController);\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  // main.createChart();\n}\n\n// COMMENTED OUT PIE CHART DATA FOR REFFERENCE\n// data = {\n//   labels: ['Fibre', 'Protein', 'Carbohydrate', 'Fats', 'Water'],\n//   datasets: [{\n//     label: 'Foods',\n//     data: [12, 30, 200, 20, 40],\n//     backgroundColor: [\n//       'rgba(255, 99, 132, 0.4)',\n//       'rgba(54, 162, 235, 0.4)',\n//       'rgba(255, 206, 86, 0.4)',\n//       'rgba(75, 192, 192, 0.4)',\n//       'rgba(153, 102, 255, 0.4)',\n//       'rgba(255, 159, 64, 0.4)'\n//     ],\n//     borderColor: [\n//       'rgba(255,99,132,1)',\n//       'rgba(54, 162, 235, 1)',\n//       'rgba(255, 206, 86, 1)',\n//       'rgba(75, 192, 192, 1)',\n//       'rgba(153, 102, 255, 1)',\n//       'rgba(255, 159, 64, 1)'\n//     ],\n//     borderWidth: 1\n//   }]\n// };\n\nCountdownController.$inject = [];\nfunction CountdownController() {\n  function getTimeRemaining(endtime) {\n    var t = Date.parse(endtime) - Date.parse(new Date());\n    var seconds = Math.floor((t / 1000) % 60);\n    var minutes = Math.floor((t / 1000 / 60) % 60);\n    var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n    var days = Math.floor(t / (1000 * 60 * 60 * 24));\n    return {\n      'total': t,\n      'days': days,\n      'hours': hours,\n      'minutes': minutes,\n      'seconds': seconds\n    };\n  }\n\n  function initializeClock(id, endtime) {\n    var clock = document.getElementById(id);\n    var daysSpan = clock.querySelector('.days');\n    var hoursSpan = clock.querySelector('.hours');\n    var minutesSpan = clock.querySelector('.minutes');\n    var secondsSpan = clock.querySelector('.seconds');\n\n    function updateClock() {\n      var t = getTimeRemaining(endtime);\n\n      daysSpan.innerHTML = t.days;\n      hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\n      minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\n      secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\n\n      if (t.total <= 0) {\n        clearInterval(timeinterval);\n      }\n    }\n\n    updateClock();\n    var timeinterval = setInterval(updateClock, 1000);\n  }\n\n  var deadline = new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000);\n  initializeClock('clockdiv', deadline);\n\n}\n","/* global Chart */\n\nangular.module('foodApp')\n.controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User', '$auth'];\nfunction UsersIndexController(User, $auth) {\n  const usersIndex = this;\n\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    usersIndex.currentUser = user;\n    usersIndex.all = User.query();\n  });\n\n  function follow(user) {\n    usersIndex.currentUser.following.push(user);\n    usersIndex.currentUser.$update(() => {\n      console.log('user @\\'d');\n    });\n  }\n\n  function unfollow(user) {\n    const i = usersIndex.currentUser.following.indexOf(user._id);\n    if(i !== -1) {\n      usersIndex.currentUser.following.splice(i, 1);\n      usersIndex.currentUser.$update(() => {\n        console.log('I can\\'t belive you\\'ve done this');\n      });\n    }\n  }\n\n  function isFollowing(user) {\n    return usersIndex.currentUser.following.filter((id) => {\n      return id === user._id;\n    }).length;\n  }\n\n  function isSelf(user) {\n    return user._id === usersIndex.currentUser._id;\n  }\n\n  usersIndex.isSelf = isSelf;\n  usersIndex.isFollowing = isFollowing;\n\n  usersIndex.follow = follow;\n  usersIndex.unfollow = unfollow;\n  usersIndex.filter = { username: '' };\n  usersIndex.canShowCanvas = true;\n\n  let labels = [];\n  let datapoints = [];\n  let chart;\n\n  function createChart(data) {\n    const chartElement = document.getElementById('myChart');\n\n    if (chart && chart.destroy) {\n      chart.destroy();\n    }\n    chart = new Chart(chartElement, {\n      type: 'line',\n      data: data\n    });\n  }\n\n  function dailyChart() {\n    labels = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    datapoints = [65, 59, 80, 81, 56, 55, 40];\n    chartData(labels, datapoints);\n  }\n\n  function weeklyChart() {\n    labels = ['1', '2', '3', '4', '5', '6', '7'];\n    datapoints = [312, 265, 470, 285, 523, 547, 342];\n    chartData(labels, datapoints);\n  }\n\n  function monthlyChart() {\n    labels = ['January','February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    datapoints = [1865, 1759, 2180, 2281, 1856, 1755, 1940, 2180, 2281, 1856, 1755, 1940];\n    chartData(labels, datapoints);\n  }\n\n  function chartData(labels, datapoints) {\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'My First dataset',\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: datapoints,\n          spanGaps: false\n        }\n      ]\n    };\n    createChart(data);\n  }\n\n  usersIndex.dailyChart = dailyChart;\n  usersIndex.weeklyChart = weeklyChart;\n  usersIndex.monthlyChart = monthlyChart;\n\n  function setGoals(user) {\n    user.dietGoals = user.goal;\n    user.dietGoalDates = user.targetDate;\n    usersIndex.currentUser.$update(() => {\n      console.log('Don\\'t let your dreams be dreams');\n    });\n  }\n\n  usersIndex.setGoals = setGoals;\n}\n","angular.module('foodApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}