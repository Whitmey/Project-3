{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/food.js","js/models/food.js","js/controllers/main.js","js/controllers/user.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","FoodsIndexController","Food","foodsIndex","all","query","FoodsNewController","create","save","foodsNew","food","FoodsShowController","deleteFood","foodsShow","$remove","get","params","delete","isLoggedIn","isAuthenticated","FoodsEditController","update","foodsEdit","$update","$resource","id","method","MainController","$rootScope","logout","secureState","e","toState","main","message","protectedStates","includes","name","preventDefault","createChart","ctx","document","getElementById","Chart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","ticks","beginAtZero","$on","UsersIndexController","User","follow","usersIndex","currentUser","following","push","unfollow","i","indexOf","_id","splice","isFollowing","filter","length","isSelf","getPayload","username","angular","module","config","$inject","factory"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,SACLC,IAAK,IACLC,YAAa,0BACbC,WAAY,6BAEbH,MAAM,YACLC,IAAK,IACLC,YAAa,0BACbC,WAAY,mCAEbH,MAAM,UACLC,IAAK,UACLC,YAAa,2BAEdF,MAAM,eACLC,IAAK,eACLC,YAAa,gCAEdF,MAAM,eACLC,IAAK,eACLC,YAAa,8BACbC,WAAY,uCAGhBJ,EAAmBK,UAAU,KAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GAE5BH,EAAcI,UACZC,SAAU,qBC3Cd,QAASC,oBAAmBC,EAAOC,GAGjC,QAASC,KACPC,QAAQC,IAAIC,EAASC,MACrBN,EAAMO,OAAOF,EAASC,MACrBE,KAAK,WACJP,EAAOQ,GAAG,gBANd,GAAMJ,GAAWK,IACjBL,GAASC,QAQTD,EAASH,OAASA,EAIpB,QAASS,iBAAgBX,EAAOC,GAG9B,QAASC,KACPC,QAAQC,IAAIQ,EAAMC,aAClBb,EAAMY,MAAMA,EAAMC,aACjBL,KAAK,WACJP,EAAOQ,GAAG,YAGd,QAASK,GAAaC,GACpBf,EAAMc,aAAaC,GAClBP,KAAK,WAEJP,EAAOQ,GAAG,YAbd,GAAMG,GAAQF,IACdE,GAAMC,eAeND,EAAMV,OAASA,EACfU,EAAME,aAAeA,EChCvB,QAASE,sBAAqBC,GAC5B,GAAMC,GAAaR,IAEnBQ,GAAWC,IAAMF,EAAKG,QAGxB,QAASC,oBAAmBJ,EAAMhB,GAKhC,QAASqB,KACPL,EAAKM,KAAKC,EAASC,KAAM,WACvBxB,EAAOQ,GAAG,gBANd,GAAMe,GAAWd,IAEjBc,GAASC,QAOTD,EAASF,OAASA,EAGpB,QAASI,qBAAoBT,EAAMhB,EAAQD,GAKzC,QAAS2B,KACPC,EAAUH,KAAKI,QAAQ,WACrB5B,EAAOQ,GAAG,gBANd,GAAMmB,GAAYlB,IAElBkB,GAAUH,KAAOR,EAAKa,IAAI7B,EAAO8B,QAQjCH,EAAUI,OAASL,EACnBC,EAAUK,WAAajC,EAAMkC,gBAI/B,QAASC,qBAAoBlB,EAAMhB,GAKjC,QAASmC,KACPC,EAAUZ,KAAKa,QAAQ,WACrBrC,EAAOQ,GAAG,YAAaR,EAAO8B,UANlC,GAAMM,GAAY3B,IAElB2B,GAAUZ,KAAOR,EAAKa,IAAI7B,EAAO8B,QAQjCrB,KAAK0B,OAASA,EC/ChB,QAASnB,MAAKsB,GACZ,MAAO,IAAIA,GAAU,cAAgBC,GAAI,SACvCJ,QAAUK,OAAQ,SCDtB,QAASC,gBAAe1C,EAAOC,EAAQ0C,GAMrC,QAASC,KACP5C,EAAM4C,SACLpC,KAAK,WACJP,EAAOQ,GAAG,gBAMd,QAASoC,GAAYC,EAAGC,GACtBC,EAAKC,QAAU,MACXjD,EAAMkC,mBAAqBgB,EAAgBC,SAASJ,EAAQK,QAC9DN,EAAEO,iBACFpD,EAAOQ,GAAG,SACVuC,EAAKC,QAAU,kCAQnB,QAASK,KAEP,GAAMC,GAAMC,SAASC,eAAe,UACpB,IAAIC,OAAMH,GACxBI,KAAM,MACNC,MACEC,QAAS,QAAS,UAAW,eAAgB,OAAQ,SACrDC,WACEC,MAAO,QACPH,MAAO,GAAI,GAAI,IAAK,GAAI,IACxBI,iBACE,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEFC,aACE,qBACA,wBACA,wBACA,wBACA,yBACA,yBAEFC,YAAa,KAGjBC,SACEC,SACEC,OACEC,aAAa,QA3DvB,GAAMtB,GAAOtC,IAEbsC,GAAKf,WAAajC,EAAMkC,gBACxBc,EAAKC,QAAU,IASf,IAAMC,KAWNP,GAAW4B,IAAI,mBAAoB1B,GAEnCG,EAAKJ,OAASA,EAwCdI,EAAKM,YAAaA,EAClBN,EAAKM,cCpEP,QAASkB,sBAAqBC,EAAMzE,GAQlC,QAAS0E,GAAOpE,GACdqE,EAAWC,YAAYC,UAAUC,KAAKxE,GACtCqE,EAAWC,YAAYtC,QAAQ,WAC7BnC,QAAQC,IAAI,cAIhB,QAAS2E,GAASzE,GAChB,GAAM0E,GAAIL,EAAWC,YAAYC,UAAUI,QAAQ3E,EAAK4E,IACrDF,MAAM,IACPL,EAAWC,YAAYC,UAAUM,OAAOH,EAAG,GAC3CL,EAAWC,YAAYtC,QAAQ,WAC7BnC,QAAQC,IAAI,sCAKlB,QAASgF,GAAY9E,GACnB,MAAOqE,GAAWC,YAAYC,UAAUQ,OAAO,SAAC7C,GAC9C,MAAOA,KAAOlC,EAAK4E,MAClBI,OAGL,QAASC,GAAOjF,GACd,MAAOA,GAAK4E,MAAQP,EAAWC,YAAYM,IA/B7C,GAAMP,GAAajE,IAEnB+D,GAAK3C,KAAMU,GAAIxC,EAAMwF,aAAaN,KAAO,SAAC5E,GACxCqE,EAAWC,YAActE,EACzBqE,EAAWxD,IAAMsD,EAAKrD,UA8BxBuD,EAAWY,OAASA,EACpBZ,EAAWS,YAAcA,EAEzBT,EAAWD,OAASA,EACpBC,EAAWI,SAAWA,EACtBJ,EAAWU,QAAWI,SAAU,ICxClC,QAAShB,MAAKlC,GACZ,MAAO,IAAIA,GAAU,cAAgBC,GAAI,SACvCJ,QAAUK,OAAQ,SNNtBiD,QACGC,OAAO,WAAY,aAAc,YAAa,eAC9CC,OAAO5G,QACP4G,OAAOpG,MAEVR,OAAO6G,SAAW,iBAAkB,sBAmCpCrG,KAAKqG,SAAW,iBCxChBH,QAAQC,OAAO,WACZrG,WAAW,qBAAsBS,oBACjCT,WAAW,kBAAmBqB,iBAEjCZ,mBAAmB8F,SAAW,QAAS,UAcvClF,gBAAgBkF,SAAW,QAAS,UClBpCH,QAAQC,OAAO,WACZrG,WAAW,uBAAwB0B,sBAGtCA,qBAAqB6E,SAAW,QAMhCxE,mBAAmBwE,SAAW,OAAQ,UAatCnE,oBAAoBmE,SAAW,OAAQ,SAAU,SAgBjD1D,oBAAoB0D,SAAW,OAAQ,UCvCvCH,QAAQC,OAAO,WACZG,QAAQ,OAAQ7E,MAEnBA,KAAK4E,SAAW,aCHhBH,QAAQC,OAAO,WACZrG,WAAW,iBAAkBoD,gBAGhCA,eAAemD,SAAW,QAAS,SAAU,cCJ7CH,QAAQC,OAAO,WACdrG,WAAW,uBAAwBkF,sBAEpCA,qBAAqBqB,SAAW,OAAQ,SCHxCH,QAAQC,OAAO,WACZG,QAAQ,OAAQrB,MAEnBA,KAAKoB,SAAW","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsIndexController as foodsIndex'\n    })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'RegisterController as register'\n    })\n    .state('select', {\n      url: '/select',\n      templateUrl: '/templates/select.html'\n    })\n    .state('dietProfile', {\n      url: '/dietProfile',\n      templateUrl: '/templates/dietProfile.html'\n    })\n    .state('dietFriends', {\n      url: '/dietFriends',\n      templateUrl: '/templates/dietFriends.html',\n      controller: 'UsersIndexController as usersIndex'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n  .controller('FoodsIndexController', FoodsIndexController);\n\n\nFoodsIndexController.$inject = ['Food'];\nfunction FoodsIndexController(Food){\n  const foodsIndex = this;\n\n  foodsIndex.all = Food.query();\n}\nFoodsNewController.$inject = ['Food', '$state'];\nfunction FoodsNewController(Food, $state) {\n  const foodsNew = this;\n\n  foodsNew.food = {};\n\n  function create() {\n    Food.save(foodsNew.food, () => {\n      $state.go('foodsIndex');\n    });\n  }\n  foodsNew.create = create;\n}\nFoodsShowController.$inject = ['Food', '$state', '$auth'];\nfunction FoodsShowController(Food, $state, $auth) {\n  const foodsShow = this;\n\n  foodsShow.food = Food.get($state.params);\n\n  function deleteFood() {\n    foodsShow.food.$remove(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  foodsShow.delete = deleteFood;\n  foodsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nFoodsEditController.$inject = ['Food', '$state'];\nfunction FoodsEditController(Food, $state) {\n  const foodsEdit = this;\n\n  foodsEdit.food = Food.get($state.params);\n\n  function update() {\n    foodsEdit.food.$update(() => {\n      $state.go('foodsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  function createChart() {\n\n    const ctx = document.getElementById('myChart');\n    const myChart = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: ['Fibre', 'Protein', 'Carbohydrate', 'Fats', 'Water'],\n        datasets: [{\n          label: 'Foods',\n          data: [12, 30, 200, 20, 40],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)'\n          ],\n          borderColor: [\n            'rgba(255,99,132,1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)'\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    });\n  }\n  main.createChart= createChart;\n  main.createChart();\n}\n","angular.module('foodApp')\n.controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User', '$auth'];\nfunction UsersIndexController(User, $auth) {\n  const usersIndex = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    usersIndex.currentUser = user;\n    usersIndex.all = User.query();\n  });\n\n  function follow(user) {\n    usersIndex.currentUser.following.push(user);\n    usersIndex.currentUser.$update(() => {\n      console.log('user @\\'d');\n    });\n  }\n\n  function unfollow(user) {\n    const i = usersIndex.currentUser.following.indexOf(user._id);\n    if(i !== -1) {\n      usersIndex.currentUser.following.splice(i, 1);\n      usersIndex.currentUser.$update(() => {\n        console.log('I can\\'t belive you\\'ve done this');\n      });\n    }\n  }\n\n  function isFollowing(user) {\n    return usersIndex.currentUser.following.filter((id) => {\n      return id === user._id;\n    }).length;\n  }\n\n  function isSelf(user) {\n    return user._id === usersIndex.currentUser._id;\n  }\n\n  usersIndex.isSelf = isSelf;\n  usersIndex.isFollowing = isFollowing;\n\n  usersIndex.follow = follow;\n  usersIndex.unfollow = unfollow;\n  usersIndex.filter = { username: '' };\n}\n","angular.module('foodApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}