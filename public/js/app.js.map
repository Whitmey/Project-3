{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/finance.js","js/controllers/finance.js","js/controllers/financeMain.js","js/models/food.js","js/controllers/food.js","js/controllers/main.js","js/models/user.js","js/controllers/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","Finance","$resource","id","update","method","FinancesController","create","save","finances","financesNew","reload","financesDelete","financeId","all","i","length","_id","$remove","editFinances","editFinance","$update","edit","delete","query","financeMainController","$rootScope","logout","secureState","e","toState","main","message","isAuthenticated","protectedStates","includes","name","preventDefault","createChart","ctx","document","getElementById","Chart","type","data","labels","datasets","backgroundColor","borderColor","borderWidth","options","scales","ticks","beginAtZero","isLoggedIn","$on","Food","FoodsController","User","moment","foods","foodsNew","res","thisUser","eaten","push","reset","foodsDelete","foodId","j","indexOf","splice","editFoods","editFood","date","format","get","getPayload","MainController","getFoods","caloryCounter","allMyFoods","allFood","todaysCals","today","calories","getDays","days","day","subtract","getCalories","k","chartElement","chart","destroy","dailyChart","datapoints","chartData","weeklyChart","reverse","monthlyChart","label","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","canShowCanvas","CountdownController","getTimeRemaining","endtime","t","Date","parse","seconds","Math","floor","minutes","hours","total","initializeClock","updateClock","daysSpan","innerHTML","hoursSpan","slice","minutesSpan","secondsSpan","clearInterval","timeinterval","clock","querySelector","setInterval","deadline","UsersIndexController","follow","usersIndex","currentUser","following","unfollow","isFollowing","filter","isSelf","setDailyGoal","dailyGoal","amount","target","checkDailyGoal","username","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer', 'angularMoment'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsController as foods'\n    })\n    .state('leaderboard', {\n      url: '/leaderboard',\n      templateUrl: '/templates/leaderboard.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'RegisterController as register'\n    })\n    .state('select', {\n      url: '/select',\n      templateUrl: '/templates/select.html'\n    })\n    .state('dietProfile', {\n      url: '/dietProfile',\n      templateUrl: '/templates/dietProfile.html'\n    })\n    .state('dietFriends', {\n      url: '/dietFriends',\n      templateUrl: '/templates/dietFriends.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('finances', {\n      url: '/finances',\n      templateUrl: '/templates/finances.html',\n      controller: 'FinancesController as finances'\n    });\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n  .factory('Finance', Finance);\n\nFinance.$inject = ['$resource'];\nfunction Finance($resource) {\n  return new $resource('/finances/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n// .controller('FinancesIndexController', FinancesIndexController)\n// .controller('FinancesNewController', FinancesNewController)\n// .controller('FinancesShowController', FinancesShowController)\n// .controller('FinancesEditController', FinancesEditController)\n.controller('FinancesController', FinancesController);\n\n\n\nFinancesController.$inject = ['Finance', '$state', '$auth'];\nfunction FinancesController(Finance, $state) {\n\n  const finances = this;\n  // finance.getIndex = getIndex;\n  // finance.newFinance = newFinance;\n  // finance.showFinances = showFinances;\n  finances.edit = editFinances;\n  finances.create = create;\n  finances.delete = financesDelete;\n  finances.editFinance = {};\n  finances.update = update;\n\n  finances.all = Finance.query();\n\n\n  finances.financesNew = {};\n\n\n  function create() {\n    Finance.save(finances.financesNew, () => {\n      $state.reload();\n    });\n  }\n\n  function financesDelete(financeId) {\n    console.log(finances.all);\n\n    for(var i = 0; i< finances.all.length; i++) {\n      if(finances.all[i]._id === financeId)\n        finances.all[i].$remove(() => {\n          $state.reload();\n        });\n    }\n  }\n\n\n  function editFinances(financeId) {\n    for(var i = 0; i< finances.all.length; i++) {\n      if(finances.all[i]._id === financeId)\n        finances.editFinance = finances.all[i];\n    }\n  }\n\n  function update() {\n    finances.editFinance.$update(() => {\n      $state.reload();\n    });\n  }\n}\n","angular.module('foodApp')\n  .controller('financeMainController', financeMainController);\n\n\nfinanceMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction financeMainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('financesIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  function createChart() {\n\n    const ctx = document.getElementById('myChart1');\n    const myChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: ['Entertanment', 'Food', 'Utilities', 'Rent', 'Car' ],\n        datasets: [{\n          data: [12, 30, 200, 20, 40],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)'\n          ],\n          borderColor: [\n            'rgba(255,99,132,1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)'\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    });\n  }\n  main.createChart= createChart;\n  main.createChart();\n\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n// .controller('FoodsIndexController', FoodsIndexController)\n// .controller('FoodsNewController', FoodsNewController)\n// .controller('FoodsShowController', FoodsShowController)\n// .controller('FoodsEditController', FoodsEditController)\n.controller('FoodsController', FoodsController);\n\n\n\nFoodsController.$inject = ['Food', 'User', '$auth', '$state', 'moment'];\nfunction FoodsController(Food, User, $auth, $state, moment) {\n\n  const foods = this;\n  foods.edit = editFoods;\n  foods.create = create;\n  foods.delete = foodsDelete;\n  foods.editFood = {};\n  foods.update = update;\n  foods.foodsNew = {};\n  foods.foodsNew.date = moment().format('DD/MM/YYYY');\n\n  const thisUser = User.get({ id: $auth.getPayload()._id });\n\n  Food.query((res) => {\n    foods.all = res;\n    thisUser.$update();\n  });\n\n  function create() {\n    Food.save(foods.foodsNew, () => {\n      Food.query((res) => {\n        foods.all = res;\n        thisUser.$update();\n        thisUser.eaten.push(foods.all[foods.all.length-1]);\n        console.log(thisUser);\n      });\n      document.getElementById('createFood').reset();\n    });\n  }\n\n  function foodsDelete(foodId) {\n    // console.log(foods.all);\n\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.all[i].$remove(() => {\n          foods.all = Food.query();\n        });\n      const j = thisUser.eaten.indexOf(foodId);\n      if (j !== -1) {\n        thisUser.eaten.splice(j, 1);\n      }\n    }\n    thisUser.$update();\n    console.log(thisUser);\n  }\n\n\n\n\n  function editFoods(foodId) {\n    thisUser.$update();\n    console.log(thisUser);\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.editFood = foods.all[i];\n    }\n  }\n\n  function update() {\n    foods.editFood.$update(() => {\n      foods.all = Food.query();\n    });\n  }\n\n\n\n\n}\n","angular.module('foodApp')\n.controller('MainController', MainController)\n.controller('CountdownController', CountdownController);\n\n\n\nMainController.$inject = ['moment', 'Food', 'User', '$auth', '$state', '$rootScope'];\nfunction MainController(moment, Food, User, $auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  main.todaysCals = todaysCals;\n  main.allFood = Food.query();\n  main.caloryCounter = 0;\n  main.allMyFoods = [];\n  main.today = moment().format('DD/MM/YYYY');\n\n  const thisUser = User.get({ id: $auth.getPayload()._id });\n\n\n  //this function gets just this current users foods from all existing foods. pushes them to main.allMyFoods\n  function getFoods() {\n    main.caloryCounter = 0;\n    main.allMyFoods = [];\n    for(let j=0; j<main.allFood.length; j++) {\n      if(thisUser.eaten.indexOf(main.allFood[j]._id) !== -1) {\n        main.allMyFoods.push(main.allFood[j]);\n      }\n    }\n  }\n\n  //this function checks if items in users foods were eaten on this weekday and adds up calories for just those items.\n  function todaysCals() {\n    getFoods();\n    for(let i=0; i<main.allMyFoods.length; i++) {\n      if (main.allMyFoods[i].date == main.today){\n        main.caloryCounter += main.allMyFoods[i].calories;\n      }\n    }\n    console.log(main.allMyFoods);\n  }\n\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You need to login to see that!';\n    }\n  }\n\n  $rootScope.$on('stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  let days = [];\n  //function to populate a MONTHS worth of objects with dates and calories. they will update each day.\n  function getDays() {\n    days = [];\n    for (let day=1; day<28; day ++) {\n      days.push( {\n        date: moment().subtract(day, 'days').format('DD/MM/YYYY'),\n        calories: 0\n      });\n    }\n    getCalories();\n    console.log(days);\n  }\n\n  function getCalories() {\n    for (let i=0; i<days.length; i++) {\n      for (let k = 0; k< main.allMyFoods.length; k++) {\n        if(main.allMyFoods[k].date === days[i].date) {\n          days[i].calories += main.allMyFoods[k].calories;\n        }\n      }\n    }\n  }\n\n\n\n  main.createChart = createChart;\n\n\n\n\n\n\n  main.canShowCanvas = true;\n\n  let labels = [];\n  let datapoints = [];\n  let chart = null;\n\n  function createChart(data) {\n\n\n    const chartElement = document.getElementById('myChart');\n\n\n\n    if (chart && chart.destroy) {\n      chart.destroy();\n    }\n    chart = new Chart(chartElement, {\n      type: 'line',\n      data: data\n    });\n  }\n\n  function dailyChart() {\n    todaysCals();\n    getDays();\n    labels = [' ', 'Today', ' '];\n    datapoints = [main.caloryCounter, main.caloryCounter, main.caloryCounter];\n    chartData(labels, datapoints);\n  }\n\n  function weeklyChart() {\n    todaysCals();\n    getDays();\n    labels = [];\n    datapoints = [];\n    for (let i=0; i<6; i++) {\n      labels.push(days[i].date);\n      datapoints.push(days[i].calories);\n    }\n    labels.reverse();\n    datapoints.reverse();\n    labels.push('Today');\n    datapoints.push(main.caloryCounter);\n\n    chartData(labels, datapoints);\n  }\n\n  function monthlyChart() {\n    todaysCals();\n    getDays();\n    labels = [];\n    datapoints = [];\n    for (let i=0; i<days.length; i++) {\n      labels.push(days[i].date);\n      datapoints.push(days[i].calories);\n    }\n    labels.reverse();\n    datapoints.reverse();\n    labels.push('Today');\n    datapoints.push(main.caloryCounter);\n    chartData(labels, datapoints);\n  }\n\n  function chartData(labels, datapoints) {\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'My First dataset',\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: datapoints,\n          spanGaps: false\n        }\n      ]\n    };\n    createChart(data);\n\n\n\n  }\n\n  main.dailyChart = dailyChart;\n  main.weeklyChart = weeklyChart;\n  main.monthlyChart = monthlyChart;\n}\n\nCountdownController.$inject = [];\nfunction CountdownController() {\n  function getTimeRemaining(endtime) {\n    var t = Date.parse(endtime) - Date.parse(new Date());\n    var seconds = Math.floor((t / 1000) % 60);\n    var minutes = Math.floor((t / 1000 / 60) % 60);\n    var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n    var days = Math.floor(t / (1000 * 60 * 60 * 24));\n    return {\n      'total': t,\n      'days': days,\n      'hours': hours,\n      'minutes': minutes,\n      'seconds': seconds\n    };\n  }\n\n  function initializeClock(id, endtime) {\n    var clock = document.getElementById(id);\n    var daysSpan = clock.querySelector('.days');\n    var hoursSpan = clock.querySelector('.hours');\n    var minutesSpan = clock.querySelector('.minutes');\n    var secondsSpan = clock.querySelector('.seconds');\n\n    function updateClock() {\n      var t = getTimeRemaining(endtime);\n\n      daysSpan.innerHTML = t.days;\n      hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\n      minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\n      secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\n\n      if (t.total <= 0) {\n        clearInterval(timeinterval);\n      }\n    }\n\n    updateClock();\n    var timeinterval = setInterval(updateClock, 1000);\n  }\n\n  var deadline = new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000);\n  initializeClock('clockdiv', deadline);\n\n\n}\n","angular.module('foodApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","\nangular.module('foodApp')\n.controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User', '$auth', 'moment'];\nfunction UsersIndexController(User, $auth, moment) {\n  const usersIndex = this;\n\n\n  usersIndex.thisUser;\n  // function getThisUser(){\n  //   User.get({ id: $auth.getPayload()._id }, ((user) => {\n  //     console.log('this one here!!!', user);\n  //     return user;\n  //   }));\n  // }\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    usersIndex.currentUser = user;\n    usersIndex.all = User.query();\n  });\n\n  function follow(user) {\n    usersIndex.currentUser.following.push(user);\n    usersIndex.currentUser.$update(() => {\n      console.log('user @\\'d');\n    });\n  }\n\n  function unfollow(user) {\n    const i = usersIndex.currentUser.following.indexOf(user._id);\n    if(i !== -1) {\n      usersIndex.currentUser.following.splice(i, 1);\n      usersIndex.currentUser.$update(() => {\n        console.log('I can\\'t belive you\\'ve done this');\n      });\n    }\n  }\n\n  function isFollowing(user) {\n    return usersIndex.currentUser.following.filter((id) => {\n      return id === user._id;\n    }).length;\n  }\n\n  function isSelf(user) {\n    return user._id === usersIndex.currentUser._id;\n  }\n\n  usersIndex.isSelf = isSelf;\n  usersIndex.isFollowing = isFollowing;\n\n  usersIndex.follow = follow;\n  usersIndex.unfollow = unfollow;\n  usersIndex.filter = { username: '' };\n  usersIndex.dailyGoal = {};\n  usersIndex.dailyGoal.date = moment().format('DD/MM/YYYY');\n\n\n\n  function setDailyGoal() {\n    usersIndex.currentUser.dailyGoal = [ {\n      amount: usersIndex.dailyGoal.amount,\n      target: usersIndex.dailyGoal.target,\n      date: usersIndex.dailyGoal.date\n    } ];\n    console.log(usersIndex.dailyGoal);\n    usersIndex.currentUser.$update(() => {\n      console.log('Don\\'t let your dreams be dreams', usersIndex.currentUser.dailyGoal, usersIndex.currentUser);\n    });\n  }\n  usersIndex.setDailyGoal = setDailyGoal;\n\n\n  function checkDailyGoal() {\n    // User.get({ id: $auth.getPayload()._id }, ((user) => {\n    //   // console.log('this one here!!!', user);\n    //   usersIndex.thisUser = user;\n    //   console.log(usersIndex.thisUser.dailyGoal[0].target === 'exceed');\n    //   // if(usersIndex.thisUser.completedGoals === undefined) {\n    //   //   usersIndex.thisUser.completedGoals = 0;\n    //   // }\n    // //   console.log(usersIndex.thisUser._id);\n    // //   if (usersIndex.thisUser.dailyGoal.date !== moment().format('DD/MM/YYYY')) {\n    // //     switch(usersIndex.thisUser.dailyGoal[0].target) {\n    // //       case \"exceed\": if(usersIndex.thisUser.dailyGoal[0].calories > days[days.length-1].calories) {\n    // //         usersIndex.thisUser.completedGoals ++; console.log('You completed your last daily goal!');\n    // //       }\n    // //       else {  }\n    // //       break;\n    // //       case \"meet\":\n    // //       code block\n    // //       break;\n    // //       case \"under\":\n    // //       code block\n    // //       break;\n    // //       default:\n    // //       default code block\n    // //     }\n    // //\n    // //     //reset dailygoal to nothing\n    // //\n    // //   }\n    // }));\n  }\n\n\n\n  checkDailyGoal();\n  usersIndex.checkDailyGoal = checkDailyGoal;\n}\n"]}