{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/food.js","js/models/food.js","js/controllers/goal.js","js/controllers/user.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","FoodsController","Food","User","create","save","foods","foodsNew","all","query","document","getElementById","reset","foodsDelete","foodId","i","length","_id","$remove","editFoods","editFood","update","$update","edit","delete","$resource","id","method","GoalsController","Goal","goals","goalsNew","goalsDelete","goalId","editGoals","editGoal","UsersIndexController","follow","usersIndex","currentUser","following","push","unfollow","indexOf","splice","isFollowing","filter","isSelf","createChart","ctx","Chart","type","data","dailyChart","labels","datapoints","chartData","weeklyChart","monthlyChart","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","setGoals","dietGoals","goal","dietGoalDates","targetDate","get","getPayload","username","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer', 'angularMoment'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsIndex.html',\n      controller: 'FoodsController as foods'\n    })\n    // .state('goalsIndex', {\n    //   url: '/goals',\n    //   templateUrl: '/templates/goalsIndex.html',\n    //   controller: 'GoalsController as goals'\n    // })\n    .state('login', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/',\n      templateUrl: '/templates/landing.html',\n      controller: 'RegisterController as register'\n    })\n    .state('select', {\n      url: '/select',\n      templateUrl: '/templates/select.html'\n    })\n    .state('dietProfile', {\n      url: '/dietProfile',\n      templateUrl: '/templates/dietProfile.html'\n    })\n    .state('dietFriends', {\n      url: '/dietFriends',\n      templateUrl: '/templates/dietFriends.html',\n      controller: 'UsersIndexController as usersIndex'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('foodsIndex');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n// .controller('FoodsIndexController', FoodsIndexController)\n// .controller('FoodsNewController', FoodsNewController)\n// .controller('FoodsShowController', FoodsShowController)\n// .controller('FoodsEditController', FoodsEditController)\n.controller('FoodsController', FoodsController);\n\n\n\nFoodsController.$inject = ['Food', 'User'];\nfunction FoodsController(Food, User) {\n\n  const foods = this;\n  // foods.getIndex = getIndex;\n  // foods.newFood = newFood;\n  // foods.showFoods = showFoods;\n  foods.edit = editFoods;\n  foods.create = create;\n  foods.delete = foodsDelete;\n  foods.editFood = {};\n  foods.update = update;\n\n  foods.all = Food.query();\n\n\n  foods.foodsNew = {};\n\n\n  function create() {\n    Food.save(foods.foodsNew, () => {\n      foods.all = Food.query();\n    });\n    document.getElementById('createFood').reset();\n  }\n\n  function foodsDelete(foodId) {\n    console.log(foods.all);\n\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.all[i].$remove(() => {\n          foods.all = Food.query();\n        });\n    }\n  }\n\n\n  function editFoods(foodId) {\n    for(var i = 0; i< foods.all.length; i++) {\n      if(foods.all[i]._id === foodId)\n        foods.editFood = foods.all[i];\n    }\n  }\n\n  function update() {\n    foods.editFood.$update(() => {\n      foods.all = Food.query();\n    });\n  }\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n// .controller('GoalsIndexController', GoalsIndexController)\n// .controller('GoalsNewController', GoalsNewController)\n// .controller('GoalsShowController', GoalsShowController)\n// .controller('GoalsEditController', GoalsEditController)\n.controller('GoalsController', GoalsController);\n\n\nGoalsController.$inject = ['Goal'];\nfunction GoalsController(Goal) {\n\n  const goals = this;\n  // goals.getIndex = getIndex;\n  // goals.newGoal = newGoal;\n  // goals.showGoals = showGoals;\n  goals.edit = editGoals;\n  goals.create = create;\n  goals.delete = goalsDelete;\n  goals.editGoal = {};\n  goals.update = update;\n\n  goals.all = Goal.query();\n\n\n  goals.goalsNew = {};\n\n\n  function create() {\n    Goal.save(goals.goalsNew, () => {\n      goals.all = Goal.query();\n    });\n    document.getElementById('createGoal').reset();\n  }\n\n  function goalsDelete(goalId) {\n    // console.log(moment().weekday() );\n\n    for(var i = 0; i< goals.all.length; i++) {\n      if(goals.all[i]._id === goalId)\n        goals.all[i].$remove(() => {\n          goals.all = Goal.query();\n        });\n    }\n  }\n\n\n  function editGoals(goalId) {\n    for(var i = 0; i< goals.all.length; i++) {\n      if(goals.all[i]._id === goalId)\n        goals.editGoal = goals.all[i];\n    }\n  }\n\n  function update() {\n    goals.editGoal.$update(() => {\n      goals.all = Goal.query();\n    });\n  }\n}\n","angular.module('foodApp')\n.controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User', '$auth'];\nfunction UsersIndexController(User, $auth) {\n  const usersIndex = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    usersIndex.currentUser = user;\n    usersIndex.all = User.query();\n  });\n\n  function follow(user) {\n    usersIndex.currentUser.following.push(user);\n    usersIndex.currentUser.$update(() => {\n      console.log('user @\\'d');\n    });\n  }\n\n  function unfollow(user) {\n    const i = usersIndex.currentUser.following.indexOf(user._id);\n    if(i !== -1) {\n      usersIndex.currentUser.following.splice(i, 1);\n      usersIndex.currentUser.$update(() => {\n        console.log('I can\\'t belive you\\'ve done this');\n      });\n    }\n  }\n\n  function isFollowing(user) {\n    return usersIndex.currentUser.following.filter((id) => {\n      return id === user._id;\n    }).length;\n  }\n\n  function isSelf(user) {\n    return user._id === usersIndex.currentUser._id;\n  }\n\n  usersIndex.isSelf = isSelf;\n  usersIndex.isFollowing = isFollowing;\n\n  usersIndex.follow = follow;\n  usersIndex.unfollow = unfollow;\n  usersIndex.filter = { username: '' };\n\n  let data = {};\n  let labels = [];\n  let datapoints = [];\n\n  function createChart() {\n    const ctx = document.getElementById('myChart');\n    const myChart = new Chart(ctx, {\n      type: 'line',\n      data: data\n    });\n  }\n\n  function dailyChart() {\n    labels = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    datapoints = [65, 59, 80, 81, 56, 55, 40];\n    chartData(labels, datapoints);\n  }\n\n  function weeklyChart() {\n    labels = ['1', '2', '3', '4', '5', '6', '7'];\n    datapoints = [312, 265, 470, 285, 523, 547, 342];\n    chartData(labels, datapoints);\n  }\n\n  function monthlyChart() {\n    labels = ['January','February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    datapoints = [1865, 1759, 2180, 2281, 1856, 1755, 1940, 2180, 2281, 1856, 1755, 1940];\n    chartData(labels, datapoints);\n  }\n\n  function chartData(labels, datapoints) {\n    data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'My First dataset',\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: datapoints,\n          spanGaps: false\n        }\n      ]\n    };\n    console.log('logging');\n    usersIndex.createChart();\n  }\n\n  usersIndex.createChart = createChart;\n  usersIndex.dailyChart = dailyChart;\n  usersIndex.weeklyChart = weeklyChart;\n  usersIndex.monthlyChart = monthlyChart;\n\n  function setGoals(user) {\n    user.dietGoals = user.goal;\n    user.dietGoalDates = user.targetDate;\n    usersIndex.currentUser.$update(() => {\n      console.log('Don\\'t let your dreams be dreams');\n    });\n  }\n\n  usersIndex.setGoals = setGoals;\n}\n","angular.module('foodApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}