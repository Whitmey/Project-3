<<<<<<< HEAD
"use strict";function Router(o,e){o.state("foodsIndex",{url:"/foods",templateUrl:"/templates/foodsIndex.html",controller:"FoodsIndexController as foodsIndex"}).state("login",{url:"/",templateUrl:"/templates/landing.html",controller:"LoginController as login"}).state("register",{url:"/",templateUrl:"/templates/landing.html",controller:"RegisterController as register"}).state("select",{url:"/select",templateUrl:"/templates/select.html"}).state("dietProfile",{url:"/dietProfile",templateUrl:"/templates/dietProfile.html"}).state("dietFriends",{url:"/dietFriends",templateUrl:"/templates/dietFriends.html"}),e.otherwise("/")}function Auth(o){o.loginUrl="/login",o.signupUrl="/register",o.tokenPrefix="",o.facebook({clientId:"1308530975838362"})}function RegisterController(o,e){function t(){console.log(r.user),o.signup(r.user).then(function(){e.go("foodsIndex")})}var r=this;r.user={},r.submit=t}function LoginController(o,e){function t(){console.log(n.credentials),o.login(n.credentials).then(function(){e.go("select")})}function r(t){o.authenticate(t).then(function(){e.go("select")})}var n=this;n.credentials={},n.submit=t,n.authenticate=r}function FoodsIndexController(o){var e=this;e.all=o.query()}function FoodsNewController(o,e){function t(){o.save(r.food,function(){e.go("foodsIndex")})}var r=this;r.food={},r.create=t}function FoodsShowController(o,e,t){function r(){n.food.$remove(function(){e.go("foodsIndex")})}var n=this;n.food=o.get(e.params),n.delete=r,n.isLoggedIn=t.isAuthenticated}function FoodsEditController(o,e){function t(){r.food.$update(function(){e.go("foodsShow",e.params)})}var r=this;r.food=o.get(e.params),this.update=t}function Food(o){return new o("/foods/:id",{id:"@_id"},{update:{method:"PUT"}})}function MainController(o,e,t){function r(){o.logout().then(function(){e.go("foodsIndex")})}function n(t,r){a.message=null,!o.isAuthenticated()&&i.includes(r.name)&&(t.preventDefault(),e.go("login"),a.message="You need to login to see that!")}function l(){var o=document.getElementById("myChart");new Chart(o,{type:"pie",data:{labels:["Fibre","Protein","Carbohydrate","Fats","Water"],datasets:[{label:"Foods",data:[12,30,200,20,40],backgroundColor:["rgba(255, 99, 132, 0.2)","rgba(54, 162, 235, 0.2)","rgba(255, 206, 86, 0.2)","rgba(75, 192, 192, 0.2)","rgba(153, 102, 255, 0.2)","rgba(255, 159, 64, 0.2)"],borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)","rgba(153, 102, 255, 1)","rgba(255, 159, 64, 1)"],borderWidth:1}]},options:{scales:{yAxes:[{ticks:{beginAtZero:!0}}]}}})}var a=this;a.isLoggedIn=o.isAuthenticated,a.message=null;var i=[];t.$on("stateChangeStart",n),a.logout=r,a.createChart=l,a.createChart()}angular.module("foodApp",["ngResource","ui.router","satellizer"]).config(Router).config(Auth),Router.$inject=["$stateProvider","$urlRouterProvider"],Auth.$inject=["$authProvider"],angular.module("foodApp").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("foodApp").controller("FoodsIndexController",FoodsIndexController),FoodsIndexController.$inject=["Food"],FoodsNewController.$inject=["Food","$state"],FoodsShowController.$inject=["Food","$state","$auth"],FoodsEditController.$inject=["Food","$state"],angular.module("foodApp").factory("Food",Food),Food.$inject=["$resource"],angular.module("foodApp").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"];
=======
"use strict";function Router(o,e){o.state("foodsIndex",{url:"/foods",templateUrl:"/templates/foodsIndex.html",controller:"FoodsIndexController as foodsIndex"}).state("login",{url:"/",templateUrl:"/templates/landing.html",controller:"LoginController as login"}).state("register",{url:"/",templateUrl:"/templates/landing.html",controller:"RegisterController as register"}).state("select",{url:"/select",templateUrl:"/templates/select.html"}).state("dietProfile",{url:"/dietProfile",templateUrl:"/templates/dietProfile.html"}).state("dietFriends",{url:"/dietFriends",templateUrl:"/templates/dietFriends.html",controller:"UsersIndexController as usersIndex"}),e.otherwise("/")}function Auth(o){o.loginUrl="/login",o.signupUrl="/register",o.tokenPrefix="",o.facebook({clientId:"1308530975838362"})}function RegisterController(o,e){function t(){console.log(n.user),o.signup(n.user).then(function(){e.go("foodsIndex")})}var n=this;n.user={},n.submit=t}function LoginController(o,e){function t(){console.log(r.credentials),o.login(r.credentials).then(function(){e.go("select")})}function n(t){o.authenticate(t).then(function(){e.go("select")})}var r=this;r.credentials={},r.submit=t,r.authenticate=n}function FoodsIndexController(o){var e=this;e.all=o.query()}function FoodsNewController(o,e){function t(){o.save(n.food,function(){e.go("foodsIndex")})}var n=this;n.food={},n.create=t}function FoodsShowController(o,e,t){function n(){r.food.$remove(function(){e.go("foodsIndex")})}var r=this;r.food=o.get(e.params),r.delete=n,r.isLoggedIn=t.isAuthenticated}function FoodsEditController(o,e){function t(){n.food.$update(function(){e.go("foodsShow",e.params)})}var n=this;n.food=o.get(e.params),this.update=t}function Food(o){return new o("/foods/:id",{id:"@_id"},{update:{method:"PUT"}})}function MainController(o,e,t){function n(){o.logout().then(function(){e.go("foodsIndex")})}function r(t,n){l.message=null,!o.isAuthenticated()&&i.includes(n.name)&&(t.preventDefault(),e.go("login"),l.message="You need to login to see that!")}var l=this;l.isLoggedIn=o.isAuthenticated,l.message=null;var i=[];t.$on("stateChangeStart",r),l.logout=n}function UsersIndexController(o,e){function t(o){i.currentUser.following.push(o),i.currentUser.$update(function(){console.log("user @'d")})}function n(o){var e=i.currentUser.following.indexOf(o._id);e!==-1&&(i.currentUser.following.splice(e,1),i.currentUser.$update(function(){console.log("I can't belive you've done this")}))}function r(o){return i.currentUser.following.filter(function(e){return e===o._id}).length}function l(o){return o._id===i.currentUser._id}var i=this;o.get({id:e.getPayload()._id},function(e){i.currentUser=e,i.all=o.query()}),i.isSelf=l,i.isFollowing=r,i.follow=t,i.unfollow=n,i.filter={username:""}}function User(o){return new o("/users/:id",{id:"@_id"},{update:{method:"PUT"}})}angular.module("foodApp",["ngResource","ui.router","satellizer"]).config(Router).config(Auth),Router.$inject=["$stateProvider","$urlRouterProvider"],Auth.$inject=["$authProvider"],angular.module("foodApp").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("foodApp").controller("FoodsIndexController",FoodsIndexController),FoodsIndexController.$inject=["Food"],FoodsNewController.$inject=["Food","$state"],FoodsShowController.$inject=["Food","$state","$auth"],FoodsEditController.$inject=["Food","$state"],angular.module("foodApp").factory("Food",Food),Food.$inject=["$resource"],angular.module("foodApp").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("foodApp").controller("UsersIndexController",UsersIndexController),UsersIndexController.$inject=["User","$auth"],angular.module("foodApp").factory("User",User),User.$inject=["$resource"];
>>>>>>> development
//# sourceMappingURL=app.js.map
